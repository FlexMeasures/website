{
    "version": "https://jsonfeed.org/version/1",
    "title": "FlexMeasures",
    "description": "",
    "home_page_url": "https://flexmeasures.io",
    "feed_url": "https://flexmeasures.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "SeitaBV"
    },
    "items": [
        {
            "id": "https://flexmeasures.io/013-overlay-charts/",
            "url": "https://flexmeasures.io/013-overlay-charts/",
            "title": "v0.13: Overlay charts ",
            "summary": "Version v0.13 of FlexMeasures lets us create dashboards with multiple graphs from various sensors layered in one plot. In addition, FlexMeasures now includes a proper page for accounts. On the&hellip;",
            "content_html": "<p>Version v0.13 of FlexMeasures lets us create dashboards with multiple graphs from various sensors layered in one plot. In addition, FlexMeasures now includes a proper page for accounts.</p>\n<p>On the backend, we protect the CPU from re-computing the same schedule over and over again if a rogue client asks for that.</p>\n<p><a href=\"https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-13-0-april-28-2023\" target=\"_blank\" rel=\"noopener noreferrer\">See changelog</a> for a complete list or read on below about the larger new features we added.</p>\n<h2>Overlay charts</h2>\n<p>With FlexMeasures, you can adapt the dashboard shown on the page for any asset. By default, you see a plot per sensor. With the <code>sensors_to_show</code> attribute, it was already possible to remove and even add plots (e.g. public price data), to create the dashboard with maximum information value.</p>\n<p>We wanted to make the dashboards more informative, as often users want to study effects of one sensor's data on others.</p>\n<p>Now, sensor numbers in <code>sensors_to_show</code> can be layered, e.g. <code>[1, [3,6]]</code> will lead to two plots, where the second shows two sensors together.</p>\n<p>As a bonus, plots are distinguished by source (different trace), sensor (different color) and source type (different stroke dash).</p>\n<p>Here is an example (see the overlay of EV charging and PV supply in the lower graph):</p>\n<figure ><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://flexmeasures.io/media/posts/29/layered-chart.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://flexmeasures.io/media/posts/29/responsive/layered-chart-xs.png 300w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-sm.png 480w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-md.png 768w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-lg.png 1024w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-xl.png 1360w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-2xl.png 1600w\"  alt=\"A layered chart from Seita's V2G living lab\" width=\"800\" height=\"375\"></figure>\n<figcaption >A layered chart from Seita's V2G living lab</figcaption>\n</figure>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">This work was done in Pull Request </span><a href=\"http://www.github.com/flexmeasures/flexmeasures/pull/534\" target=\"_blank\" rel=\"noopener noreferrer\">534</a><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">.</span></p>\n<h2>Account page</h2>\n<p>FlexMeasures is not just a single-purpose program ― it's a platform which can sit in the cloud and serve multiple sites. To manage these sites when they have different asset owners, the concept of accounts matters a lot. An account might for instance be a SME, with several local energy assets and also several employees (who might or might not have a FlexMeasures user account)</p>\n<p>That's why we worked on showing accounts better in the UI and API (in the CLI they are already represented well). The endpoints <code><cite>/accounts</cite></code> (to list accounts) and <code><cite>/accounts/&lt;id&gt;</cite></code> (to show one account) both work in the UI and (via <code>/api/v3_0/</code>) in the API.</p>\n<p>We tried to make this useful both for users (looking at their own account) and admins (looking at all accounts). In the future, we hope to work on \"consulting accounts\", who have the right to administer several other accounts (their clients), making FlexMeasures a potential B2B2B platform! </p>\n<p>This work was done in Pull Request <a href=\"http://www.github.com/flexmeasures/flexmeasures/pull/605\">605</a>.</p>\n<h2>Avoid re-computing the same schedule</h2>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Computing schedules is where FlexMeasures creates its value, and also where it does the heavier CPU work. The more different sites we serve, the more we learn that it's crucial to protect this CPU work.</span></p>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Triggering schedules is easy, computing them is hard.<br>Here is an example scenario: A rogue client might trigger the same schedule multiple times ― a simple error, but overloading our server with work. In this feature, we enable FlexMeasures to notice that the same computation is already done or currently ongoing. This means not starting the computation again, and also informing the caller with the right status.</span></p>\n<p>Technically, we now cache the job, so that before FlexMeasures creates a new one, it can look up if the equivalent already exists somewhere in the queue. Interesting architectural work!</p>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">This work was done in Pull Request </span><a href=\"http://www.github.com/flexmeasures/flexmeasures/pull/616\" target=\"null\">616</a><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">.</span></p>\n<h2>API sunsetting</h2>\n<p>Finally, as <a href=\"https://flexmeasures.readthedocs.io/en/latest/dev/note-on-datamodel-transition.html#note-on-datamodel-transition\">our long journey to a more flexible datamodel</a> is coming close to completion, we are sunsetting (as we pre-announced in version 0.12) API versions below 3. Please help your users upgrade to API version 3 before you use FlexMeasures v0.13!</p>\n<p>We compiled <a href=\"https://flexmeasures.readthedocs.io/en/latest/api/introduction.html#deprecation-and-sunset\" target=\"_blank\" rel=\"noopener noreferrer\">some helpful information for FlexMeasures hosts </a>to manage this transition well.  </p>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">This work was done in Pull Request <a href=\"http://www.github.com/flexmeasures/flexmeasures/pull/650\">650</a>.</span></p>",
            "image": "https://flexmeasures.io/media/posts/29/v013-preview.png",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
                   "FlexMeasures Blog"
            ],
            "date_published": "2023-05-01T20:18:24+02:00",
            "date_modified": "2023-05-01T20:18:24+02:00"
        },
        {
            "id": "https://flexmeasures.io/012-replay-custom-scheduling/",
            "url": "https://flexmeasures.io/012-replay-custom-scheduling/",
            "title": "v0.12: Replay, custom scheduling",
            "summary": "Version v0.12 of FlexMeasures adds a cool re-play feature and support for adding custom scheduling algorithms! Actually, this release is a big one with many small improvements, e.g. the CLI&hellip;",
            "content_html": "<p>Version v0.12 of FlexMeasures adds a cool re-play feature and support for adding custom scheduling algorithms!</p>\n<p>Actually, this release is a big one with many small improvements, e.g. the CLI for data ingestions have taken a big leap.</p>\n<p><a href=\"https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-11-0-august-28-2022\" target=\"_blank\" rel=\"noopener noreferrer\">See changelog</a> or read on below to read what we added.</p>\n<h2>Replay</h2>\n<p>FlexMeasures shines in keeping track <em>what was known at what time</em>. In both simulations and real time operation, we found that our partners want to see how the data situation progressed over time.</p>\n<p>That's why we decided to add a replay-button to asset dashboards. It travels through time for you: </p>\n<figure ><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://flexmeasures.io/media/posts/27/ReplayWithRuler.gif\" alt=\"Visualization of FlexMeasures data\" width=\"1257\" height=\"868\"></figure>\n<figcaption >Data from Seita's V2G living lab, played back in FlexMeasures</figcaption>\n</figure>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Where is this useful? We've seen this work very well in demos, and to explain why certain schedules were executed half-way, but then the rest got re-written. This happens because when new data arrives (e.g. prices change, an EV re-connects to the charger, etc.), FlexMeasures needs to re-compute the schedule. </span></p>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">This <a href=\"https://twitter.com/flexmeasures/status/1551841500815695875\" target=\"_blank\" rel=\"noopener noreferrer\">has been in the works</a> for a long time, and now finally released. This work was done in Pull Request </span><a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/463\" target=\"_blank\" rel=\"noopener noreferrer\">463</a><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">.</span></p>\n<h2>Custom scheduling</h2>\n<p>To schedule flexible assets is the main premise of FlexMeasures. More concretely, the mission of FlexMeasures is to drastically cut down the development time on any flexibility solution, no matter if an in-built scheduler already is applicable.</p>\n<p>Together with the plugin support released in <a href=\"https://flexmeasures.io/070-professional-plugins/\">v0.7</a>, this release comes with support for people writing their own schedulers.</p>\n<p>This is relevant to researchers and startups who are innovating in the realm of algorithms, but still would like to save development time (and use FlexMeasures as a framework and web application in which to embed their logic).</p>\n<p>We will use this internally as well, as it makes any new project easier. Usually, we don't work on new schedulers in the open ― we prefer to iterate in a plugin first. If the result is great, then it'll enter FlexMeasures core.</p>\n<p>Up until now, schedulers were an internal feature, accessible by an API, but focused on storage flexibility for the main part (we worked on shiftable flexibility in other projects). Opening a core feature up for other use cases is really helpful to arrive at a better design. We've completely refactored how schedulers are implemented and how to give them the necessary information (the <code>flex-model</code> and the <code>flex-context</code>), and we're very excited how this will empower our own work and that of FlexMeasures users.</p>\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">The <a href=\"https://flexmeasures.readthedocs.io/en/latest/plugin/customisation.html#adding-your-own-scheduling-algorithm\" target=\"_blank\" rel=\"noopener noreferrer\">plugin developer tutorial</a> and <a href=\"https://flexmeasures.readthedocs.io/en/latest/api/notation.html#describing-flexibility\" target=\"_blank\" rel=\"noopener noreferrer\">this part of the API notation docs</a> tell you more.</span></p>\n<p>This work was done in Pull Requests <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/505\">505</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/511\">511,</a> <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/537\">537</a>,  <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/568\">568</a> and <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/566\">566</a>.</p>\n<h2>Ingesting data on the CLI</h2>\n<p>Almost every project involves getting some historical data read in (e.g. from CSV or Excel files), be it because one uses FlexMeasures to run simulations, or to have a base data set for machine learning purposes (e.g. a forecasting algorithm). This is tough and iterative engineering work.</p>\n<p>FlexMeasures has CLI support for this (<code>flexmeasures add beliefs</code>). We tackled several issues to make this work even more developer-friendly:</p>\n<ol>\n<li>drop duplicate records with warning</li>\n<li>allow configuring which column contains explicit recording times for each data point (use case: import forecasts) </li>\n<li>localize timezone naive data</li>\n<li>support reading in datetime and timedelta values</li>\n<li>remove rows with NaN values</li>\n<li>filter by values in specific columns</li>\n</ol>\n<p>We also improved its counterpart, <code class=\"docutils literal notranslate\"><span class=\"pre\">flexmeasures</span> <span class=\"pre\">show</span> <span class=\"pre\">beliefs</span></code>. We now support:</p>\n<ol>\n<li>showing beliefs data in a custom resolution and/or timezone</li>\n<li>saving the shown beliefs data to a CSV file</li>\n<li>handle showing (and saving) instantaneous sensor data and non-instantaneous sensor data together</li>\n</ol>\n<p>This work was done in Pull Requests <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/501\">501</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/521\" target=\"_blank\" rel=\"noopener noreferrer\">521</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/519\" target=\"_blank\" rel=\"noopener noreferrer\">519</a> and <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/542\" target=\"null\">542</a>.</p>\n<p> </p>",
            "image": "https://flexmeasures.io/media/posts/27/replay-button.png",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
                   "FlexMeasures Blog"
            ],
            "date_published": "2023-01-04T17:17:46+01:00",
            "date_modified": "2023-01-04T17:17:46+01:00"
        },
        {
            "id": "https://flexmeasures.io/flexmeasures-featured-on-python-developer-podcast/",
            "url": "https://flexmeasures.io/flexmeasures-featured-on-python-developer-podcast/",
            "title": "FlexMeasures featured on Python developer podcast",
            "summary": "Would an audio-introduction of our work on FlexMeasures help you get started with learning about it? Now there is one ― Listen below or check streaming options on the podcast&hellip;",
            "content_html": "<p><span class=\"break-words\"><span dir=\"ltr\">Would an audio-introduction of our work on <a href=\"https://seita.nl/core-technology/flexmeasures/\">FlexMeasures</a> help you get started with learning about it? Now there is one ― Listen below or check streaming options on <a href=\"https://www.pythonpodcast.com/flexmeasures-energy-management-system-episode-381/\">the podcast website!</a></span></span></p>\n<div class=\"vc_row wpb_row vc_row-fluid\">\n<div class=\"wpb_column vc_column_container vc_col-sm-12\">\n<div class=\"vc_column-inner\">\n<div class=\"wpb_wrapper\">\n<div class=\"wpb_text_column wpb_content_element \">\n<div class=\"wpb_wrapper\">\n<p>We’re proud that FlexMeasures has been the featured project on the podcast for Python developers <a href=\"https://www.pythonpodcast.com/\">“Podcast.__init__”</a>.</p>\n<div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"375\" height=\"125\" title=\"Podlove Web Player: The Python Podcast.__init__ - Take Control Of Your Electrical Systems With The Open Source FlexMeasures Energy Management System\" src=\"https://cdn.podlove.org/web-player/share.html?episode=https%3A%2F%2Fwww.pythonpodcast.com%2Fwp%2F%3Fpodlove_player4%3D766\" frameborder=\"0\" scrolling=\"no\" tabindex=\"0\"></iframe></div>\n<p>During the recording of this episode, we discussed the general need in today’s energy world for such an energy flexibility platform and what we want to achieve.</p>\n<p>Then in the second half, we dive into a bit more into how you might start using FlexMeasures from a technical perspective. Pick it up (it’s open source), try it out and don’t forget you can always ask us questions!</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<p> </p>\n<p> </p>",
            "image": "https://flexmeasures.io/media/posts/28/podcast-init-logo.png",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
                   "FlexMeasures Blog"
            ],
            "date_published": "2022-12-14T18:24:14+01:00",
            "date_modified": "2022-12-14T18:24:58+01:00"
        },
        {
            "id": "https://flexmeasures.io/011-better-data-views/",
            "url": "https://flexmeasures.io/011-better-data-views/",
            "title": "v0.11: Better data views",
            "summary": "Version v0.11 of FlexMeasures adds much more useful data views, which are also customisable. In addition, we completed the Docker-compose stack to include background job workers. This is very useful&hellip;",
            "content_html": "<p>Version v0.11 of FlexMeasures adds much more useful data views, which are also customisable.</p>\n<p>In addition, we completed the Docker-compose stack to include background job workers. This is very useful for developers.</p>\n<p><a href=\"https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-11-0-august-28-2022\" target=\"_blank\" rel=\"noopener noreferrer\">See changelog</a> or read on below to read what we added.</p>\n<h2>Data views</h2>\n<p>FlexMeasures is about optimising how your flexible assets are run. It's thus crucial to show the data in context. For instance, the charging schedule of an electric car should be shown together with what it's optimised against. In a project of ours, that is dynamic (hourly) prices. The asset page for the EV should show the prices, as well. The featured image of this blog entry shows this.</p>\n<p>Also, we believe users want to concentrate on the data, therefore we moved the controls (date-picker, editing of asset attributes) out of the way.</p>\n<figure ><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://flexmeasures.io/media/posts/26/asset-page-011.gif\" alt=\"A Gif showing the new asset page and the edit controls.\" width=\"750\" height=\"359\"></figure>\n<figcaption >An example of the new asset page and its controls which are only visible if needed.</figcaption>\n</figure>\n<p>There are numerous other additions for better data viewing, like better axis, tooltip and unit support in plots, remembering the selected date range across pages and  the dashboard being able to group assets by accounts (not just type).</p>\n<p>This work was done in Pull Requests  <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/449\" target=\"_blank\" rel=\"noopener noreferrer\">449</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/467\" target=\"_blank\" rel=\"noopener noreferrer\">467</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/423\" target=\"_blank\" rel=\"noopener noreferrer\">423</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/446\" target=\"_blank\" rel=\"noopener noreferrer\">446</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/447\" target=\"_blank\" rel=\"noopener noreferrer\">447</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/474\" target=\"_blank\" rel=\"noopener noreferrer\">474</a> and <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/475\" target=\"_blank\" rel=\"noopener noreferrer\">475</a>.</p>\n<h2>Full docker compose stack</h2>\n<p>You could tell from the last releases that we want to Dockerize FlexMeasures, so it becomes a first-class cloud citizen, but also that developers can get it to run locally with the least installation hassle.</p>\n<p>The missing piece was that the Docker compose stack now also spins up a Redis database and a worker node for doing computations in a queue.</p>\n<p>The <a href=\"https://flexmeasures.readthedocs.io/en/latest/dev/docker-compose.html\" target=\"_blank\" rel=\"noopener noreferrer\">docker-compose tutorial</a> reflects this now.</p>\n<p>This work was done in <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/455\" target=\"_blank\" rel=\"noopener noreferrer\">Pull Request 455</a>.</p>\n<h2>Serving data in the resolution you need</h2>\n<p>When getting data out of FlexMeasures, you also might want a specific resolution. Hourly data is much lighter (if that is all you need) than 5-minute data, for instance. </p>\n<p>We added a resolution parameter to <a href=\"https://flexmeasures.readthedocs.io/en/latest/api/v3_0.html#get--api-v3_0-sensors-data\">the <code class=\"notranslate\">/sensors/data</code> (GET) endpoint.</a></p>\n<p>This work was done in <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/458\" target=\"_blank\" rel=\"noopener noreferrer\">Pull Request 458</a>.</p>\n<p> </p>",
            "image": "https://flexmeasures.io/media/posts/26/asset-page-prices-charging.png",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
                   "FlexMeasures Blog"
            ],
            "date_published": "2022-08-28T23:40:13+02:00",
            "date_modified": "2022-08-28T23:40:13+02:00"
        },
        {
            "id": "https://flexmeasures.io/get-in-touch/",
            "url": "https://flexmeasures.io/get-in-touch/",
            "title": "Get in touch",
            "summary": "We want you to succeed in using, hosting or extending FlexMeasures. For all your questions and ideas, you can join the FlexMeasures community in the following ways: Join the #flexmeasures&hellip;",
            "content_html": "<p>We want you to succeed in using, hosting or extending FlexMeasures. For all your questions and ideas, you can join the FlexMeasures community in the following ways:</p>\n<ul class=\"simple\">\n<li>\n<p>Join the <code class=\"docutils literal notranslate\"><span class=\"pre\">#flexmeasures</span></code> channel over at <a class=\"reference external\" href=\"https://lfenergy.slack.com\">https://lfenergy.slack.com</a></p>\n</li>\n<li>\n<p>Write to us at <a class=\"reference external\" href=\"mailto:flexmeasures%40lists.lfenergy.org\">flexmeasures@lists.lfenergy.org</a> (you can join this mailing list <a class=\"reference external\" href=\"https://lists.lfenergy.org/g/flexmeasures\">here</a>).</p>\n</li>\n<li>\n<p>Follow <a class=\"reference external\" href=\"https://twitter.com/flexmeasures\">@flexmeasures</a> on Twitter.</p>\n</li>\n</ul>\n<p>You're also welcome to contribute with issues or pull requests on <a href=\"https://github.com/FlexMeasures/flexmeasures\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>.</p>",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
            ],
            "date_published": "2022-05-30T17:51:17+02:00",
            "date_modified": "2022-05-30T17:51:17+02:00"
        },
        {
            "id": "https://flexmeasures.io/faq/",
            "url": "https://flexmeasures.io/faq/",
            "title": "FAQ",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1g2pacnrh8\">What does FlexMeasures do?</a></li>\n<li><a href=\"#mcetoc_1g2pahoqio\">Why do you do this?</a></li>\n<li><a href=\"#mcetoc_1g2pagetfj\">Why is FlexMeasures open source, and why is it part of the Linux Energy Foundation?</a></li>\n<li><a href=\"#mcetoc_1g2pagetfk\">How do I use FlexMeasures / get started?</a></li>\n<li><a href=\"#mcetoc_1g2pagetfl\">Can you give some real-world examples where FlexMeasures is used today?</a></li>\n<li><a href=\"#mcetoc_1g2pagetfm\">How can FlexMeasures become a puzzle piece in large-scale solutions?</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1g2pacnrh8\">What does FlexMeasures do?</h2>\n<div> </div>\n<div>FlexMeasures is an energy management system (EMS), but a specialized one. You can see it as a data-driven decision-support system for energy flexibility.</div>\n<div>The question FlexMeasures helps to solves is: What are the best times to run my flexible assets? For instance, when to (dis)charge my EV batteries? When should we run our heat pumps to warm up the office?</div>\n<div> </div>\n<div>Here is the simple version ― sensor data goes in, optimized schedules come out:</div>\n<h2><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/simple-flexEMS-2.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-xs.png 300w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-sm.png 480w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-md.png 768w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-lg.png 1024w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-xl.png 1360w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-2xl.png 1600w\"  alt=\"\" width=\"750\" height=\"191\"></figure>Why do you do this?</h2>\n<div> </div>\n<div>See <a href=\"https://www.seita.nl/why\" target=\"_blank\" rel=\"noopener noreferrer\">this mission statement</a> (from the original creators): We have to go green. Flexible demand has to be matched with green energy. Open innovation can get us to the speed we need for the global transition.</div>\n<h2>How does FlexMeasures add value?</h2>\n<div>\n<div> </div>\n<div>In the end, energy flexibility is about saving energy costs and CO₂. This is why we do this in the first place.</div>\n<div> </div>\n<div>Taking a more closer look, we believe that lowering the cost of software development can help a big deal. More organisations will be willing to make use of energy flexibility, if the initial costs of such smart systems are low enough. And software development (not even the machine learning parts) makes up a bigger part of the costs than people realize.</div>\n<div> </div>\n<div>We want developers to love building novel apps and services with FlexMeasures, and for them to focus on the context-specific dimensions: The configuration of how they want FlexMeasures to optimize outcomes, and how this gets presented to users/operators.</div>\n<div> </div>\n<div><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Let's take a closer look at FlexMeasures' three core value drivers:</span>\n<div><br>\n<div>1. Real-time data intelligence and integration, with advice for the rest of the day. For example, forecasts and schedules are made available via API.</div>\n<div>2. Energy sensor and environment data have multiple sources and their forecasts are uncertain. FlexMeasures uses <a href=\"https://github.com/SeitaBV/timely-beliefs)\" target=\"_blank\" rel=\"noopener noreferrer\">the timely-beliefs library</a> to model this well.</div>\n<div>3. Developer support ― building customer-facing apps &amp; services is where energy flexibility hits the road. FlexMeasures reduces developer workload with a well-documented API, data visualization and multi-tenancy, and it supports plugins to customize and extend the platform to your needs.</div>\n<div> </div>\n<div>Here is a more complete picture of how FlexMeasures fits into an advanced and configurable data-schedules loop:</div>\n<div> </div>\n<div><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/overview-flexEMS.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-xs.png 300w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-sm.png 480w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-md.png 768w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-lg.png 1024w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-xl.png 1360w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-2xl.png 1600w\"  alt=\"\" width=\"800\" height=\"457\"></figure></div>\n</div>\n</div>\n<h2 id=\"mcetoc_1g2pagetfj\">Why is FlexMeasures open source, and why is it part of the Linux Energy Foundation?</h2>\n<p>We saw two reasons to open source the code of FlexMeasures:</p>\n<ol>\n<li>Nowadays, open source is a great fit for the speed of innovation which we need, and also the spread of innovation. The energy transition has to go blazingly fast, everywhere. These days, open source projects are often able to innovate faster than closed source counterparts (once they've picked up momentum).</li>\n<li>From our many years of experience in designing smart energy solutions, we've come to realize that energy solutions often have multiple stakeholders (e.g. asset owner, user, network operator, energy service company). The transparency offered by open source, and the lack of lock-in, makes collaboration easier and agreements faster.</li>\n</ol>\n<p>The <a href=\"https://www.lfenergy.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Linux Energy Foundation</a> is a great place for the FlexMeasures project to be part of the growing community of people who understand the above reasoning.open source </p>\n<h2 id=\"mcetoc_1g2pagetfk\">How do I use FlexMeasures / get started?</h2>\n<p>We make FlexMeasures, so that developers are as productive with energy optimization as possible. As we are developers ourselves, we know that it takes a couple smaller steps to engage with new technology.</p>\n<p>Your journey, from dipping your toes in the water towards being a happy FlexMeasures power user, could look like this:</p>\n<ol class=\"arabic simple\">\n<li>\n<p>Quickstart ― Find an optimized schedule for your flexible asset, like a battery, with standard FlexMeasures tooling. This is basically what the from-scratch tutorial above does. All you need are 10 minutes and a CSV file with prices to optimise against.</p>\n</li>\n<li>\n<p>Automate ― get the prices from an open API, for instance <a class=\"reference external\" href=\"https://transparency.entsoe.eu/\">ENTSO-E</a> (using a plugin like <a class=\"reference external\" href=\"https://github.com/SeitaBV/flexmeasures-entsoe\">flexmeasures-entsoe</a>), and run the scheduler regularly in a cron job.</p>\n</li>\n<li>\n<p>Integrate ― Load the schedules via FlexMeasures’ API, so you can directly control your assets and/or show them within your own front-end.</p>\n</li>\n<li>\n<p>Customize ― Load other data (e.g. your solar production or weather forecasts via <a class=\"reference external\" href=\"https://github.com/SeitaBV/flexmeasures-openweathermap/\">flexmeasures-openweathermap</a>. Adapt the algorithms, e.g. do your own forecasting or tweak the standard scheduling algorithm so it optimizes what you care about. Or write a plugin for accessing a new kind of market. The opportunities are endless!</p>\n</li>\n</ol>\n<div> </div>\n<div>\n<h2 id=\"mcetoc_1g2pagetfl\">Can you give some real-world examples where FlexMeasures is used today?</h2>\n<p>FlexMeasures is being used in a few industry projects (water sanitation, sludge burning), where we for instance help to run centrifuges to run during the greenest hours of the day.</p>\n<p>It is also used in projects with smaller assets, around the smart home setting (<a href=\"https://positive-design.nl/\" target=\"_blank\" rel=\"noopener noreferrer\">a vehicle-to-grid living lab</a> and battery optimization). Here, FlexMeasures helps to buy cheap, and sell at high prices, for an optimal financial result.</p>\n<p>Much work currently goes into the integration of heat pumps.</p>\n<p>Of course, we might be missing some use cases. <a href=\"https://flexmeasures.io/get-in-touch/\">We'd love to hear from you</a>.</p>\n<h2 id=\"mcetoc_1g2pagetfm\">How can FlexMeasures become a puzzle piece in large-scale solutions?</h2>\n<p>The \"data-driven\" part is where we start! From our experience, data pipelines and dashboarding around energy-consuming assets now often exists.</p>\n<p>FlexMeasures works well as the single EMS, but also as an added smart back-end. Integrating the data often means to feed only the relevant parts to FlexMeasures (only relevant sensors, only the resolution needed for decision-making in schedules, e.g. 5 minutes).</p>\n<p>Once the right algorithms are connected, FlexMeasures provides optimized schedules via API. Its UI also shows sensor data and schedules and provides the ability for users/operators to annotate them.</p>\n<p>The schedules an thus be integrated into larger solutions, into user-facing apps etc. Just as the context requires.</p>\n</div>\n</div>",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
            ],
            "date_published": "2022-05-11T12:28:23+02:00",
            "date_modified": "2022-06-01T17:39:20+02:00"
        },
        {
            "id": "https://flexmeasures.io/010-docker-styling/",
            "url": "https://flexmeasures.io/010-docker-styling/",
            "title": "v0.10: Docker &amp; styling",
            "summary": "Version v0.10 of FlexMeasures (see changelog) adds the ability to run Flexmeasures inside a Docker container. Containerization is a big step towards easier installation and scaling in the cloud! We&hellip;",
            "content_html": "<p>Version v0.10 of FlexMeasures (<a href=\"https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-10-0-may-8-2022\" target=\"_blank\" rel=\"noopener noreferrer\">see changelog</a>) adds the ability to run Flexmeasures inside a Docker container. Containerization is a big step towards easier installation and scaling in the cloud!</p>\n<p>We also gave the backoffice a nice styling update.</p>\n<h2>Dockerization</h2>\n<p>Docker is great for developer productivity and for running APIs in modern scalable clouds environments. We created <a href=\"https://hub.docker.com/repository/docker/lfenergy/flexmeasures\" target=\"_blank\" rel=\"noopener noreferrer\">a Docker image for FlexMeasures</a>, so from now on, it's possible to run FlexMeasures in a Docker container.</p>\n<p>The great advantage is that running FM can happen on every computer or cloud server within minutes. We also offer a docker compose file. Check out the documentation (<a href=\"https://flexmeasures.readthedocs.io/en/latest/host/docker.html\" target=\"_blank\" rel=\"noopener noreferrer\">docker</a>, <a href=\"https://flexmeasures.readthedocs.io/en/latest/dev/docker-compose.html\" target=\"_blank\" rel=\"noopener noreferrer\">docker compose</a>). We also updated <a href=\"https://flexmeasures.readthedocs.io/en/latest/tut/toy-example-from-scratch.html\" target=\"_blank\" rel=\"noopener noreferrer\">our main entry-level tutorial</a> with getting started using Docker.</p>\n<p>A nice part of the work that was done in the docker-compose part is that the FlexMeasures API now has a health endpoint, which tells us if FlexMeasures is ready to work on requests. Next to containerization, this is the type of preparation one needs to run a software inside Kubernetes :)</p>\n<p>This work was done in Pull Requests <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/416\" target=\"_blank\" rel=\"noopener noreferrer\">416</a>.</p>\n<h2>New Style</h2>\n<p>With the FlexMeasures EMS, we believe in the API as a first-level citizen. But FM also shows you your assets and data out of the box, and the web design was in need of some love.</p>\n<p>We improved layout, font and general design. Check out the before and after impression :</p>\n<div class=\"gallery-wrapper gallery-wrapper--wide\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"2\">\n<figure class=\"gallery__item\"><a href=\"https://flexmeasures.io/media/posts/23/gallery/screenshot_asset_oldstyle.png\" data-size=\"1920x937\"><img loading=\"lazy\" src=\"https://flexmeasures.io/media/posts/23/gallery/screenshot_asset_oldstyle-thumbnail.png\" alt=\"Old layout\" width=\"720\" height=\"351\"></a>\n<figcaption>Old layout</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://flexmeasures.io/media/posts/23/gallery/screenshot_asset-2.png\" data-size=\"1908x1338\"><img loading=\"lazy\" src=\"https://flexmeasures.io/media/posts/23/gallery/screenshot_asset-2-thumbnail.png\" alt=\"New layout\" width=\"720\" height=\"505\"></a>\n<figcaption>New layout</figcaption>\n</figure>\n</div></div>\n<p>We now define colors via CSS variables, which makes it easier to restyle the FM back-office to match other corporate branding (important for offering FM in a white label context).</p>\n<p>This work was done in <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/425\" target=\"_blank\" rel=\"noopener noreferrer\">Pull Request 425</a>.</p>\n<h2> </h2>\n<p> </p>",
            "image": "https://flexmeasures.io/media/posts/23/horizontal-logo-monochromatic-white.webp",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
                   "FlexMeasures Blog"
            ],
            "date_published": "2022-05-08T01:46:01+02:00",
            "date_modified": "2022-05-08T02:10:42+02:00"
        },
        {
            "id": "https://flexmeasures.io/090-cli-developer-power/",
            "url": "https://flexmeasures.io/090-cli-developer-power/",
            "title": "v0.9.0: CLI &#x3D;&#x3D; developer power",
            "summary": "Version v0.9.0 of FlexMeasures (see changelog) adds many CLI commands to control FlexMeasures' data from the terminal. We hope this helps with reducing the onboarding time for new accounts! FlexMeasures&hellip;",
            "content_html": "<p>Version v0.9.0 of FlexMeasures (<a href=\"https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-9-0-march-8-2022\" target=\"_blank\" rel=\"noopener noreferrer\">see changelog</a>) adds many CLI commands to control FlexMeasures' data from the terminal. We hope this helps with reducing the onboarding time for new accounts!</p>\n<p>FlexMeasures will also now convert incoming data, if it has a different source unit than the required sensor unit.</p>\n<p>Finally, we added new tutorial on how to get started using FlexMeasures in just a few minutes and we began a new API version (v3) which is more REST-like than v2 and better supports <a href=\"https://flexmeasures.readthedocs.io/en/latest/dev/note-on-datamodel-transition.html\">the new data model. </a>  Do let us know if these things help you be more productive with FlexMeasures!</p>\n<h2>CLI commands</h2>\n<p>Developers like to work from the terminal. This lets them interact quicker and more direct with a software platform. With the 0.9.0 release, FlexMeasures adds several commands to work with an instance.</p>\n<p>To have them available is especially useful when onboarding a new account or new assets (which is the time when the most developer attention is spent in a FlexMeasures project, or any enterprise software project). These commands are also useful to automate tasks like data ingestion or scheduling.</p>\n<p>Here is  a list of new commands:</p>\n<ul>\n<li>Showing data: <code>flexmeasures show accounts</code>, <code>flexmeasures show account</code>, <code>flexmeasures show roles</code>, <code>flexmeasures show asset-types</code>, <code>flexmeasures show asset</code>, <code>flexmeasures show data-sources</code>, and <code>flexmeasures show beliefs</code></li>\n<li>Resample sensor data to a different resolution: <code>flexmeasures db-ops resample-data</code></li>\n<li>Create a new schedule for a given power sensor: <code>flexmeasures add schedule</code></li>\n<li>Edit/add an attribute on an asset or sensor: <code>flexmeasures edit attribute</code></li>\n<li>Add a toy account with a battery and a market for trying FlexMeasures out quickly: <code>flexmeasures add toy-account</code></li>\n<li>Deleting data: <code> flexmeasures delete unchanged-beliefs</code>, <code>flexmeasures delete nan-beliefs</code>, <code>flexmeasures delete sensor</code>, <code>flexmeasures delete asset</code></li>\n</ul>\n<p>You can see all commands in <a href=\"https://flexmeasures.readthedocs.io/en/latest/cli/commands.html\" target=\"_blank\" rel=\"noopener noreferrer\">FlexMeasures' CLI documentation</a>.</p>\n<p>This work was done in Pull Requests <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/328\">328</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/341\">341</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/337\">337</a> , <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/291\">339</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/343\">343</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/360\">360,</a> <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/368\">368</a> and <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/395\">395</a>.</p>\n<h2>Unit conversion</h2>\n<p>Units are a crucial topic in time series data. Only if you get them right, will your data also be correct (and you avoid the risk of incorrect data / lengthy debugging periods). Especially if you have to transform data. One example is of course power to energy, e.g. kW to kWh. There is many more examples.</p>\n<figure class=\"post__image post__image--center\" ><img loading=\"lazy\" src=\"https://imgs.xkcd.com/comics/rounding.png\" data-is-external-image=\"true\"  alt=\"XKCD on unit conversion\" width=\"420\" height=\"489\">\n<figcaption >The relevant XKCD cartoon</figcaption>\n</figure>\n<p>We use the excellent <a href=\"https://pint.readthedocs.io/en/stable/\" target=\"_blank\" rel=\"noopener noreferrer\">pint library</a> to help us with that. With version 0.9.0,  FlexMeasures will now convert incoming data, if it has a different source unit than the required sensor unit.</p>\n<p>For instance, if the incoming data is kWh, and we know the sensor should store kW, and we also know the sensor's time resolution (e.g. it sends data once per 5 minutes), then we can store kWh data correctly as kW data.</p>\n<p>Another great example are percentages. We might receive data in percentages, but it should be permille.</p>\n<p>This is now done automatically in both the CLI (<code>flexmeasures add beliefs</code>) and the API (<code>POST /sensorData</code>) when adding data.</p>\n<p>This work was done in <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/341\">Pull Request 341</a> and <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/359\">Pull Request 359</a>.</p>\n<h2>Toy tutorial</h2>\n<p>We want many organisations to use FlexMeasures and drastically reduce the development time they need to get an energy flexibility app or service up and running. For this, we were missing a tutorial to show from scratch how FlexMeasures can be useful within minutes.</p>\n<p>We now have one where you install FlexMeasures and within a couple minutes you are optimizing the charging schedule of a battery. See it in action here.</p>\n<p>This work was done in <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/381\">Pull Request 381</a>.</p>\n<h2> </h2>\n<p> </p>",
            "image": "https://flexmeasures.io/media/posts/22/florian-krumm-1osIUArK5oA-unsplash-2.jpg",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
                   "FlexMeasures Blog"
            ],
            "date_published": "2022-03-25T17:04:30+01:00",
            "date_modified": "2022-03-25T17:18:20+01:00"
        },
        {
            "id": "https://flexmeasures.io/plugins/",
            "url": "https://flexmeasures.io/plugins/",
            "title": "Plugins",
            "summary": "You can extend the FlexMeasures EMS with functionality like UI pages, API endpoints, CLI functions and eventually algorithms. This is actually how energy flexibility apps &amp; services are built on&hellip;",
            "content_html": "<p>You can extend the FlexMeasures EMS with functionality like UI pages, API endpoints,  CLI functions and <a href=\"https://flexmeasures.io/roadmap/\">eventually</a> algorithms. This is actually how energy flexibility apps &amp; services are built on top of FlexMeasures!</p>\n<p>Extensibility is key to the open innovation we are going for here.  Read <a href=\"https://flexmeasures.readthedocs.io/en/latest/dev/plugins.html\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> how one builds a plugin. </p>\n<p>Solving a use case for a client often involves putting custom code for them in a plugin. So at Seita, we've made quite a few which are private.</p>\n<p>Here, let's list crucially useful and also open-source plugins which actually exist already ― this list should grow (<a href=\"https://www.seita.nl/contact\" target=\"_blank\" rel=\"noopener noreferrer\">tell us</a> if there is one you made and want to add here):</p>\n<h3>OpenWeatherMap</h3>\n<p><a href=\"https://openweathermap.org/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenWeatherMap</a> is one of the best services to get your weather forecasts these days. And these forecasts might be highly useful for deciding what the optimal schedule for the next few hours is. For instance, to maximise self-consumption of your solar panels.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://flexmeasures.io/media/posts/21/OpenWeather-Logo.jpg\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-xs.jpg 300w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-sm.jpg 480w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-md.jpg 768w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-lg.jpg 1024w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-xl.jpg 1360w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-2xl.jpg 1600w\"  alt=\"OpenWeatherMap  Logo\" width=\"432\" height=\"149\"></figure>\n<p>The source code of the plugin is <a href=\"https://github.com/SeitaBV/flexmeasures-openweathermap/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. It adds two CLI commands, one for registering weather sensors on desired locations, one for calling the API and gathering the forecasts for the upcoming hours.</p>\n<h3>ENTSO-E</h3>\n<p>Market data is crucial for planning ahead. Two examples we use are day-ahead prices (to optimize energy costs) and production forecasts (to estimate the CO2 content on the grid for the upcoming hours).</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://flexmeasures.io/media/posts/21/ENTSO-E_logo_sml.jpg\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-xs.jpg 300w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-sm.jpg 480w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-md.jpg 768w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-lg.jpg 1024w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-xl.jpg 1360w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-2xl.jpg 1600w\"  alt=\"ENTSO-E logo\" width=\"443\" height=\"120\"></figure>\n<p>ENTSO-E is the association of European TSOs. <a href=\"https://transparency.entsoe.eu/\" target=\"_blank\" rel=\"noopener noreferrer\">Their transparency platform</a> publishes different kind of data across European regions. </p>\n<p>The source code of the plugin is <a href=\"https://github.com/SeitaBV/flexmeasures-entsoe\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. It currently supports importing day-ahead prices as well as generation. Based on generation, the CO2 content for the upcoming day can be computed.</p>\n<h3>Z-Info</h3>\n<p>A plugin for importing data from <a href=\"https://www.z-info.nl\" rel=\"nofollow\">Z-Info</a> into FlexMeasures. Z-Info is a sensor data service for the Dutch water industry. The source code is <a href=\"https://github.com/SeitaBV/flexmeasures-zinfo\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://flexmeasures.io/media/posts/21/Z-info-FC-RGB-188x300.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-xs.png 300w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-sm.png 480w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-md.png 768w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-lg.png 1024w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-xl.png 1360w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-2xl.png 1600w\"  alt=\"Z-Info Logo\" width=\"188\" height=\"300\"></figure>",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
            ],
            "date_published": "2022-02-09T23:02:58+01:00",
            "date_modified": "2022-04-13T22:34:30+02:00"
        },
        {
            "id": "https://flexmeasures.io/080-better-scheduling-safer-data/",
            "url": "https://flexmeasures.io/080-better-scheduling-safer-data/",
            "title": "v0.8.0: Better scheduling, safer data",
            "summary": "Version v0.8.0 of FlexMeasures (see changelog) improves scheduling &amp; helps to keep data safe. Behind the scenes, a big data model transition is taking form. We work with scheduling of&hellip;",
            "content_html": "<p>Version v0.8.0 of FlexMeasures (<a href=\"https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-8-0-january-24-2022\" target=\"_blank\" rel=\"noopener noreferrer\">see changelog</a>) improves scheduling &amp; helps to keep data safe. Behind the scenes, a big data model transition is taking form.</p>\n<h2>Better scheduling</h2>\n<p>We work with scheduling of batteries<a href=\"https://seita.nl/project/v2ghome-living-lab/\" target=\"_blank\" rel=\"noopener noreferrer\"> in practice</a>, which is a great opportunity to find small and crucial improvements.</p>\n<p>For instance, we were able to improve the stability in edge cases. FlexMeasures also now can take into account the limited round trip efficiency of batteries, as well as asymmetric buy/sell prices.</p>\n<p>This work was done in Pull Requests <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/291\">291</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/267\">267</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/270\">270</a>, <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/300\">300</a> and <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/291\">291</a>.</p>\n<h2>Safer data</h2>\n<p>If several accounts (customers) sit in the same FlexMeasures server, it is all the more crucial that only the correctly authorized persons get to see or change data.</p>\n<p>v0.8.0 introduces the ability to protect data within users within one account, building on our multi-tenancy model from <a href=\"https://flexmeasures.io/v060-multi-tenancy-error-monitoring/\">version 0.6.0</a>. This work was done in <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/210\">Pull Request 210</a>.</p>\n<p>When implementing authorization, it's highly important to do that in a developer-friendly way. What we mean with that is developers need to find it straightforward to make the correct decisions of who has permission to create/read/update/delete which data, and which API endpoints require the user to have which permissions.</p>\n<p>In v0.8.0, we implement an authorization model, where the first question is answered in one central place (on the data model) and with high granularity (object-level security). We also offer a new API endpoint decorator (<code class=\"docutils literal notranslate\"><span class=\"pre\">@permission_required_for_context</span></code>), so in-built endpoints, as well as API endpoints in plugins, can be protected easily.</p>\n<p>This work was done in <a href=\"http://www.github.com/SeitaBV/flexmeasures/pull/234\">Pull Request 234</a>.</p>\n<h2>Data model transition</h2>\n<p>Behind the curtains, this version makes a huge step from our deprecated data model to a new, more flexible one. We describe this transition in detail <a href=\"https://flexmeasures.readthedocs.io/en/latest/dev/note-on-datamodel-transition.html\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>, even with before &amp; after pictures.</p>\n<p>We are left with a few items on our TODO list, but in this version, we made a big effort. We moved a lot of structure over, as well as actual data and some UI (dashboard, assets). We believe that was the hardest part.</p>\n<p>We also took care so existing users feel as little blockage as possible. We wrote extra code so the old data model can still function in the new world, and that data is copied over in the background (don't forget to do the database migration, of course, see changelog).</p>\n<h2> </h2>\n<p> </p>",
            "image": "https://flexmeasures.io/media/posts/20/salman-hossain-saif-n6uLxWeCMao-unsplash.jpg",
            "author": {
                "name": "SeitaBV"
            },
            "tags": [
                   "FlexMeasures Blog"
            ],
            "date_published": "2022-01-24T14:00:45+01:00",
            "date_modified": "2022-01-24T14:02:16+01:00"
        }
    ]
}
