<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>FlexMeasures</title>
    <link href="https://flexmeasures.io/feed.xml" rel="self" />
    <link href="https://flexmeasures.io" />
    <updated>2023-08-26T23:59:47+02:00</updated>
    <author>
        <name>SeitaBV</name>
    </author>
    <id>https://flexmeasures.io</id>

    <entry>
        <title>v0.15: Process scheduling &amp; Heatmap</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/015-process-scheduling-heatmap/"/>
        <id>https://flexmeasures.io/015-process-scheduling-heatmap/</id>
        <media:content url="https://flexmeasures.io/media/posts/33/daily-activity-heatmap-2.png" medium="image" />
            <category term="FlexMeasures Blog"/>

        <updated>2023-08-26T23:59:47+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/33/daily-activity-heatmap-2.png" alt="Activity Heatmap example" />
                    Version v0.15 of FlexMeasures brings the ability to schedule energy processes and adds a new data visualization: Daily activity heatmap. Finally, we add API support for managing sensors. See changelog&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://flexmeasures.io/media/posts/33/daily-activity-heatmap-2.png" class="type:primaryImage" alt="Activity Heatmap example" /></p>
                <div class="post__inner post__entry">
<p>Version v0.15 of FlexMeasures brings the ability to schedule energy processes and adds a new data visualization: Daily activity heatmap. Finally, we add API support for managing sensors.</p>
<p><a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-15-0-august-09-2023" target="_blank" rel="noopener noreferrer">See changelog</a> for a complete list or read on below about the larger new features we added.</p>
<h2>Scheduling energy processes</h2>
<p>FlexMeasures' <a href="https://flexmeasures.readthedocs.io/en/latest/concepts/device_scheduler.html" target="_blank" rel="noopener noreferrer">in-built device scheduler</a> works best for storage devices like batteries or heat buffers, which can have any flow. We sometimes encounter situations where the flexibility lies in a steady process, which has to happen during some time window. Usually, this is a feature in process-heavy industry settings like water purification or paper manufacturing.</p>
<p>We have now added the process scheduler to be used in such scenarios. Let's say you need a process which takes 45 kW of power, and it needs to run 14 hours before tomorrow ― you have 10 hours of flexibility! Given some cost signal (like prices, or CO2), you can tell FlexMeasures to find the best running times. </p>
<p>Here is an overview of what you can tell FlexMeasures about your process optimization needs (this is the flex model):</p>
<ul>
<li><span class="blob-code-inner blob-code-marker js-code-nav-pass" data-code-marker="+"><code><span class="pl-c1"><span class="pl-token">power</span></span></code>: <span class="pl-token">nominal</span> <span class="pl-token">power</span> <span class="pl-token">of</span> <span class="pl-token">the</span> <span class="pl-token">process</span></span></li>
<li><span class="blob-code-inner blob-code-marker js-code-nav-pass" data-code-marker="+"><code><span class="pl-c1"><span class="pl-token">duration</span></span></code>: <span class="pl-token">time</span> <span class="pl-token">that</span> <span class="pl-token">the</span> <span class="pl-token">process</span> <span class="pl-token">lasts</span></span></li>
<li><span class="blob-code-inner blob-code-marker js-code-nav-pass" data-code-marker="+"><code><span class="pl-c1"><span class="pl-token">optimization_sense</span></span></code>: <span class="pl-token">objective</span> <span class="pl-token">of</span> <span class="pl-token">the</span> <span class="pl-token">scheduler</span>, to <span class="pl-token">maximize</span> <span class="pl-token">or</span> <span class="pl-token">minimize</span></span></li>
<li><span class="blob-code-inner blob-code-marker js-code-nav-pass" data-code-marker="+"><code><span class="pl-c1"><span class="pl-token">time_restrictions</span></span></code>: <span class="pl-token">time</span> <span class="pl-token">periods</span> <span class="pl-token">in</span> <span class="pl-token">which</span> <span class="pl-token">the</span> <span class="pl-token">load</span> <span class="pl-token">cannot</span> <span class="pl-token">be</span> <span class="pl-token">schedule</span> <span class="pl-token">to</span></span></li>
<li><span class="blob-code-inner blob-code-marker js-code-nav-pass" data-code-marker="+"><code><span class="pl-c1"><span class="pl-token">load_type</span></span></code>: <span class="pl-token">Inflexible</span>, <span class="pl-token">Breakable</span> <span class="pl-token">or</span> <span class="pl-token">Shiftable</span></span></li>
</ul>
<p>Note the load_type:</p>
<p>Plus, in <a href="https://flexmeasures.readthedocs.io/en/latest/api/notation.html#flex-context" target="_blank" rel="noopener noreferrer">the flexibility context</a>, you can (as usual) add a <code>consumption-price-sensor</code>.</p>
<p>This scheduler is available through the API when you <a href="https://flexmeasures.readthedocs.io/en/latest/api/v3_0.html#post--api-v3_0-sensors-(id)-schedules-trigger">trigger a new schedule for a sensor</a> on an asset with type "process" or "load".</p>
<p>We also made a CLI command for computing schedules like this:</p>
<pre class="notranslate"><code class="notranslate">flexmeasures add schedule for-process <br>    --sensor-id 4 --process-type SHIFTABLE<br>    --start 2023-07-23T00:00:00+01:00 <br>    --duration PT24H --process-duration PT4H --process-power 0.4MW<br>    --consumption-price-sensor 2 <br>    --forbid '{"start": "${TOMORROW}T14:00:00+02:00", "duration" : "PT1H"}'</code></pre>
<p>We documented usage of this new scheduler <a href="https://flexmeasures.readthedocs.io/en/latest/tut/toy-example-process.html" target="_blank" rel="noopener noreferrer">in a tutorial</a>.</p>
<p>This work was done in Pull Requests <a href="http://www.github.com/flexmeasures/flexmeasures/pull/729" target="_blank" rel="noopener noreferrer">729</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/768" target="_blank" rel="noopener noreferrer">768</a>, and <a href="http://www.github.com/flexmeasures/flexmeasures/pull/777" target="_blank" rel="noopener noreferrer">777</a>. </p>
<h2>New data visualization: Daily activity heatmap</h2>
<p>Heatmaps are great ways to spot the hotspots of activity. Usually heatmaps are actually geographical maps. In our context, the most interesting background is time ― so we'd like to see activity hotspots on a map of time intervals.</p>
<p>We chose the "time map" of weekdays. From our experience, this is where you see the most interesting activity hotspots at a glance. For instance, that mornings often experience peaks. Or that Tuesday afternoons have low energy use, for some reason.</p>
<p>Here is how it looks like for one week of temperature data:</p>
<figure class="post__image post__image--center"><figure class="post__image post__image--center"><img  src="https://flexmeasures.io/media/posts/33/Screenshot-from-2023-07-29-17-09-18.png" alt="Temperature data in new heatmap" width="800" height="239" loading="lazy" sizes="(max-width: 48em) 100vw, 768px" srcset="https://flexmeasures.io/media/posts/33/responsive/Screenshot-from-2023-07-29-17-09-18-xs.png 300w ,https://flexmeasures.io/media/posts/33/responsive/Screenshot-from-2023-07-29-17-09-18-sm.png 480w ,https://flexmeasures.io/media/posts/33/responsive/Screenshot-from-2023-07-29-17-09-18-md.png 768w ,https://flexmeasures.io/media/posts/33/responsive/Screenshot-from-2023-07-29-17-09-18-lg.png 1024w ,https://flexmeasures.io/media/posts/33/responsive/Screenshot-from-2023-07-29-17-09-18-xl.png 1360w ,https://flexmeasures.io/media/posts/33/responsive/Screenshot-from-2023-07-29-17-09-18-2xl.png 1600w"></figure>
<figcaption>It's easy to see which days had milder temperatures.</figcaption>
</figure>
<p>And here are 4 days of (dis)-charging patterns in Seita's <a href="https://v2g-liberty.eu/" target="_blank" rel="noopener noreferrer">V2GLiberty</a> project:</p>
<figure class="post__image post__image--center"><figure class="post__image post__image--center"><img  src="https://flexmeasures.io/media/posts/33/DailyMatrix-NissanLeaf.png" alt="" width="800" height="249" loading="lazy" sizes="(max-width: 48em) 100vw, 768px" srcset="https://flexmeasures.io/media/posts/33/responsive/DailyMatrix-NissanLeaf-xs.png 300w ,https://flexmeasures.io/media/posts/33/responsive/DailyMatrix-NissanLeaf-sm.png 480w ,https://flexmeasures.io/media/posts/33/responsive/DailyMatrix-NissanLeaf-md.png 768w ,https://flexmeasures.io/media/posts/33/responsive/DailyMatrix-NissanLeaf-lg.png 1024w ,https://flexmeasures.io/media/posts/33/responsive/DailyMatrix-NissanLeaf-xl.png 1360w ,https://flexmeasures.io/media/posts/33/responsive/DailyMatrix-NissanLeaf-2xl.png 1600w"></figure>
<figcaption>Charging (blue) mostly happens in sunshine hours, discharging during high-price hours (morning &amp; evening)</figcaption>
</figure>
<p>So on a technical level, the daily heatmap is essentially a heatmap of the sensor's values, with dates on the y-axis and time of day on the x-axis. For individual devices, it gives an insight into the device's running times. A new button lets users switch between charts.</p>
<p>This work was done in Pull Request <a href="http://www.github.com/flexmeasures/flexmeasures/pull/715" target="_blank" rel="noopener noreferrer">715</a>.</p>
<h2>Manage sensors in API</h2>
<p>Until now, it was possible to work on assets via the FlexMeasures API, but it had no CRUD capabilities for sensors. We now added GET, POST, PATCH and DELETE endpoints, so talking to FlexMeasures from the outside becomes more powerful. Custom frontends or installations using <a href="https://pypi.org/project/flexmeasures-client/" target="_blank" rel="noopener noreferrer">the FlexMeasures Client</a> can fully build up complete asset-sensor structures on their own (the client will be updated to reflect this soon).</p>
<p>This work was done in Pull Requests <a href="http://www.github.com/flexmeasures/flexmeasures/pull/759" target="_blank" rel="noopener noreferrer">759</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/767" target="_blank" rel="noopener noreferrer">767</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/773" target="_blank" rel="noopener noreferrer">773</a> and <a href="http://www.github.com/flexmeasures/flexmeasures/pull/784" target="_blank" rel="noopener noreferrer">784</a>.</p>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>The FlexMeasures client is here!</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/fm-client-is-here/"/>
        <id>https://flexmeasures.io/fm-client-is-here/</id>
        <media:content url="https://flexmeasures.io/media/posts/32/bell-sign-on-registration-reception-preview-xl.jpg" medium="image" />
            <category term="FlexMeasures Blog"/>

        <updated>2023-08-07T13:04:02+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/32/bell-sign-on-registration-reception-preview-xl.jpg" alt="Bell on registration desk" />
                    We've taken a crucial step in making FlexMeasures even more developer-friendly! Last week, we released version 0.1 of the new FlexMeasures client. What is the use of a client library&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://flexmeasures.io/media/posts/32/bell-sign-on-registration-reception-preview-xl.jpg" class="type:primaryImage" alt="Bell on registration desk" /></p>
                <div class="post__inner post__entry">
<p data-pm-slice="1 1 []">We've taken a crucial step in making FlexMeasures even more developer-friendly! Last week, we released version 0.1 of the new <a href="https://pypi.org/project/flexmeasures-client/&gt;" target="_blank" rel="noopener noreferrer">FlexMeasures client</a>.</p>
<p>What is the use of a client library for the FlexMeasures platform? Well, FlexMeasures is foremost a web server ― it calculates optimal schedules for flexible energy assets in the cloud, according to price, CO2 output or other constraints. Its API is <a href="https://flexmeasures.readthedocs.io" target="_blank" rel="noopener noreferrer">well-documented</a>. Even though APIs are one of the web architecture's shining beacons, it's not really convenient for developers to use them directly. That's where developer-friendly tooling, like client libraries, come in!</p>
<p>The FlexMeasures client wraps the most important interactions you need to add if you interact with FlexMeasures. For example, if you are connecting a local energy management system (EMS) to be optimized via FlexMeasures, you would need authentication, data I/O and the triggering of new computations. With the client, these functionalities are now as easy to use as calling a function. For instance, here we authorize to a FlexMeasures server, request a schedule for a battery charging sensor and retrieve it (once it's computed):</p>
<pre><code>import asyncio

from flexmeasures_client.client import FlexMeasuresClient

EMAIL = "admin@admin.nl"
PASSWORD = "admin"

async def my_script():
    schedule = await flexmeasures_client.trigger_and_get_schedule(
        sensor_id=1,
        start="2023-06-18T10:00:00+00:00",
        duration="PT45M",
        soc_unit="MWh",
        soc_at_start=50,
        soc_targets=[
            {
                "value": 100,
                "datetime": "2023-06-20T11:00+02:00",
            }
        ],
        consumption_price_sensor=3,
    )<br>    print(schedule)

client = FlexMeasuresClient(
    email=EMAIL,
    password=PASSWORD,
    host="localhost:5000",
)

asyncio.run(my_script())</code></pre>
<p>The FlexMeasures Client is written in Python, so it's most useful for Python developers. In principle, other languages could follow.</p>
<p>At Seita, we first started using the client in a new service with <a href="https://projecten.topsectorenergie.nl/projecten/turbineketel-nestore-en-seita-ems-voor-het-aardgasvrij-maken-van-wijken-tunes-37596" target="_blank" rel="noopener noreferrer">smart heat storage control</a> and in <a href="https://v2g-liberty.eu/" target="_blank" rel="noopener noreferrer">our V2G project</a>. The FlexMeasures client will evolve together with the FlexMeasures API. For instance, adding sensors is <a href="https://github.com/FlexMeasures/flexmeasures/projects/18" target="_blank" rel="noopener noreferrer">a feature you can expect soon</a>.</p>
<p>In addition, to the most important interactions, we're also adding an S2 layer (<a href="https://flexible-energy.eu/wpcms/wp-content/uploads/2022/12/Energy-Management-Opportunities-for-The-Home.pdf" target="_blank" rel="noopener noreferrer">S2</a> is a new flexible asset protocol, with explicit flexibility expression ability). We'll talk more about S2 in another blog post.</p>
<p>If you're trying out the FlexMeasures Client, we'd love to hear from you. Is it useful? What can be improved? You can add issues on <a href="https://github.com/FlexMeasures/flexmeasures-client" target="_blank" rel="noopener noreferrer">the Github project page</a>. And of course, stars as well as pull requests are welcome :)</p>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.14: Reporting power</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/014-reporting-power/"/>
        <id>https://flexmeasures.io/014-reporting-power/</id>
        <media:content url="https://flexmeasures.io/media/posts/31/mike-tinnion-3ym6i13Y9LU-unsplash-xl.jpg" medium="image" />
            <category term="FlexMeasures Blog"/>

        <updated>2023-08-07T13:01:46+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/31/mike-tinnion-3ym6i13Y9LU-unsplash-xl.jpg" alt="Report / Notebook" />
                    Version v0.14 of FlexMeasures begins a major upgrade in reporting capability. Also, this version begins work to support scheduling of heat storage. Finally, we added a bunch of developer support&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://flexmeasures.io/media/posts/31/mike-tinnion-3ym6i13Y9LU-unsplash-xl.jpg" class="type:primaryImage" alt="Report / Notebook" /></p>
                <p>Version v0.14 of FlexMeasures begins a major upgrade in <span style="text-decoration: underline;">reporting capability.</span> Also, this version begins work to support scheduling of <span style="text-decoration: underline;">heat storage</span>. Finally, we added a bunch of <span style="text-decoration: underline;">developer support</span> features.</p>
<p><a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-14-0-june-15-2023" target="_blank" rel="noopener noreferrer">See changelog</a> for a complete list or read on below about the larger new features we added.</p>
<h2>Reporting</h2>
<p>FlexMeasures feeds upon raw measurement data (e.g. solar generation) and data from third parties (e.g. weather forecasts). They come together in the FlexMeasures scheduling algorithms.</p>
<p>However, there are more use cases for enriching these data by combining them:</p>
<ol>
<li>Pre-calculations: E.g. from a tariff and some tax rules we compute the real financial impact of price data.</li>
<li>Post-calculations: To be able to show the customer value, we regularly want to compute things like money or CO2 saved.</li>
</ol>
<p>These calculations can be done with code, but there'll be many repetitions. </p>
<p>We now added an infrastructure that allows us to define computation pipelines (see an example below) and CLI commands for developers to list available reporters and trigger their computations regularly:</p>
<ul>
<li><code><span class="blob-code-inner blob-code-marker js-code-nav-pass" data-code-marker="+"><span class="pl-c1">flexmeasures show reporters</span></span></code></li>
<li><code><span class="blob-code-inner blob-code-marker js-code-nav-pass" data-code-marker="+"><span class="pl-c1">flexmeasures add report</span></span></code></li>
</ul>
<p>The reporter classes we are designing are using pandas under the hood and can be sub-classed, allowing us to build new reporters from stable simpler ones, and even pipelines. Remember: <em>re-use is developer power</em>!</p>
<p>We believe this infrastructure will become very powerful and enable FlexMeasures hosters and plugin developers to implement exciting new features.</p>
<p>So here is a glimpse into a reporter we made - it is based on the <code>AggregatorReporter</code> (which is for the combination of any two sensors). This simplified example reporter calculates how much of your local PV power has not been covered by your own consumption:</p>
<pre class="notranslate">{
    <span class="pl-ent">"beliefs_search_configs"</span>: [
        {
            <span class="pl-ent">"sensor"</span>: <span class="pl-c1">1</span>,
            <span class="pl-ent">"source"</span> : <span class="pl-c1">1</span>,
            <span class="pl-ent">"alias"</span> : <span class="pl-s"><span class="pl-pds">"</span>pv<span class="pl-pds">"</span></span>
        },
        {
            <span class="pl-ent">"sensor"</span>: 2,
            <span class="pl-ent">"source"</span> : <span class="pl-c1">2</span>,
            <span class="pl-ent">"alias"</span> : <span class="pl-s"><span class="pl-pds">"<span class="pl-ent">consumption</span></span><span class="pl-pds">"</span></span>
        }
    ],
    <span class="pl-ent">"method"</span> : <span class="pl-s"><span class="pl-pds">"</span>sum<span class="pl-pds">"</span></span>,
    <span class="pl-ent">"weights"</span> : {
        <span class="pl-ent">"pv"</span> : <span class="pl-c1">1.0</span>,
        <span class="pl-ent">"consumption"</span> : <span class="pl-c1">-1.0</span>
    }
}</pre>
<p>Much more elaborate reporters are possible to be done this way, and we will showcase more later. </p>
<p>This work was done in Pull Requests <a href="http://www.github.com/flexmeasures/flexmeasures/pull/641" target="_blank" rel="noopener noreferrer">641</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/659" target="_blank" rel="noopener noreferrer">659</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/712" target="_blank" rel="noopener noreferrer">712</a> and <a href="http://www.github.com/flexmeasures/flexmeasures/pull/686" target="_blank" rel="noopener noreferrer">686</a>. </p>
<p>P.S. We are not done. You are invited to follow along in <a href="https://github.com/FlexMeasures/flexmeasures/discussions/662">the current discussion</a>, where you'll find new ideas like the <code class="notranslate">EnergyBillReporter</code>or the <code>CO2Reporter</code>. We might even support YAML for even higher readability!</p>
<h2>Working on heat scheduling: storage efficiency</h2>
<p>Optimizing heat storage is our next big goal, after our work towards batteries. </p>
<p>We have decided to extend the in-built storage scheduling algorithm towards this goal. There might be other approaches for solving some complex heat storage configurations with custom advanced algorithms, but we believe that a majority of cases can be solved in-built.</p>
<p>The first action was to support the buffer-like behavior of heat storage, namely that energy (heat) is being lost over time. This lead to the new parameter <code>storage-efficiency</code>, which is now part of the <a href="https://flexmeasures.readthedocs.io/en/latest/api/notation.html#flex-model">flex model</a>. So now we can express that a hot water storage tank will lose around 1% of the stored heat per day. This will be reflected in what the scheduler finds to be optimal.</p>
<p>This work was done in Pull Request <a href="http://www.github.com/flexmeasures/flexmeasures/pull/679">679</a>.</p>
<h2>Developer support: docs, packaging</h2>
<p>We extended the core team that works on FlexMeasures, and that is always an opportunity to spot problems in the support for developers. We added two main improvements:</p>
<ul>
<li>Better developer docs, making it easier to install FlexMeasures and understand what it's doing (Pull Requests <a href="http://www.github.com/flexmeasures/flexmeasures/pull/664">664</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/665">665</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/676">676</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/687">687</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/698">698</a>)</li>
<li>Packaging improvements, making it easier to use FlexMeasures in deployments (Pull Requests: <a href="http://www.github.com/flexmeasures/flexmeasures/pull/670">670</a>, <a href="http://www.github.com/flexmeasures/flexmeasures/pull/671">671</a>)</li>
</ul>
<h2>API sunsetting</h2>
<p>Finally, as <a href="https://flexmeasures.readthedocs.io/en/latest/dev/note-on-datamodel-transition.html#note-on-datamodel-transition">our long journey to a more flexible datamodel</a> is coming close to completion, we are sunsetting (as we pre-announced in version 0.12) API versions below 3. Please help your users upgrade to API version 3 before you use FlexMeasures v0.14!</p>
<p>While version 0.13 still allowed hosts to get the sunset endpoints back if needed, we now have sunsetted them and they return HTTP status code 410 by default.</p>
<p>We compiled <a href="https://flexmeasures.readthedocs.io/en/latest/api/introduction.html#deprecation-and-sunset" target="_blank" rel="noopener noreferrer">some helpful information for FlexMeasures hosts </a>to manage this transition well.  </p>
<p>This work was done in Pull Request <a href="http://www.github.com/flexmeasures/flexmeasures/pull/667">667</a>.</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Blackout Testing in FlexMeasures API</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/blackout-testing-in-flexmeasures-api/"/>
        <id>https://flexmeasures.io/blackout-testing-in-flexmeasures-api/</id>
        <media:content url="https://flexmeasures.io/media/posts/30/simon-berger-87RXi_iC1xI-unsplash.jpg" medium="image" />
            <category term="FlexMeasures Blog"/>

        <updated>2023-05-17T14:13:48+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/30/simon-berger-87RXi_iC1xI-unsplash.jpg" alt="" />
                    What is "Blackout testing"? A tool to provide stable API development to your users in the long-term. By prescribed "shock therapy" :) FlexMeasures is already a few years in development, and&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://flexmeasures.io/media/posts/30/simon-berger-87RXi_iC1xI-unsplash.jpg" class="type:primaryImage" alt="" /></p>
                <p><span class="break-words"><span dir="ltr">What is "Blackout testing"? A tool to provide stable API development to your users in the long-term. By prescribed "shock therapy" :)<br><br>FlexMeasures is already a few years in development, and therefore we are running into issues of longer-term support while innovation is still ongoing. As <a href="https://flexmeasures.readthedocs.io/en/latest/dev/note-on-datamodel-transition.html#note-on-datamodel-transition">we have refactored the data model</a>, we also need to move forward with the API and stop supporting older versions.<br>For us as a team, this was an opportunity to adopt proper customer/user support, learning from other professionals who support APIs for the long run. This benefits hosters of FlexMeasures as well as our users.<br><br>Often, API endpoints change or are put out of use (becoming legacy part of the software, eventually not served anymore). However, users currently rely on them. And they hate upgrading. They might not all jump to upgrading their own systems, even if you suggest in time that they should. Why act now, right? Maybe tomorrow! This is a major problem for SaaS providers, who need to innovate and move on.<br><br>In FlexMeasures (v0.14, see <a href="https://github.com/flexMeasures/flexmeasures/pull/651">PR 651</a>), we adopted an industry standard called <a href="https://design.oftrust.net/api-migration-policies/blackout-testing">"Blackout Testing"</a>. This tool lets your users experience in a short &amp; planned "shock therapy" if they need to act.<br><br>Here is the usual how it fits into your process: First comes deprecation (API is now legacy code), then sunset (API stops being served). Both of these are pre-announced with clear dates. Both also give the using systems automated signals: HTTP headers label the stage implicitly (deprecation or sunset), and HTTP status codes do that explicitly (e.g. moving from 200 OK to 410 Gone and finally 404 NotFound).<br><br>In short, a blackout test would temporarily simulate the removal (return 410 instead of 200) for a pre-announced short while, maybe an hour. <br><br>That should really get everyone's attention :)<br><br>If you are hosting FlexMeasures, then from version 0.14 on, a blackout test can be activated by changing a simple setting (<a href="https://flexmeasures.readthedocs.io/en/latest/configuration.html#flexmeasures-api-sunset-active">FLEXMEASURES_API_SUNSET_ACTIVE</a>).<br><br>If you are a user connected to a FlexMeasures server, this simply means you will be served better. Fewer surprises, still innovation!</span></span></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.13: Overlay charts </title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/013-overlay-charts/"/>
        <id>https://flexmeasures.io/013-overlay-charts/</id>
        <media:content url="https://flexmeasures.io/media/posts/29/v013-preview.png" medium="image" />
            <category term="FlexMeasures Blog"/>

        <updated>2023-05-01T20:26:21+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/29/v013-preview.png" alt="Overlaid charts" />
                    Version v0.13 of FlexMeasures lets us create dashboards with multiple graphs from various sensors layered in one plot. In addition, FlexMeasures now includes a proper page for accounts. On the&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://flexmeasures.io/media/posts/29/v013-preview.png" class="type:primaryImage" alt="Overlaid charts" /></p>
                <p>Version v0.13 of FlexMeasures lets us create dashboards with multiple graphs from various sensors layered in one plot. In addition, FlexMeasures now includes a proper page for accounts.</p>
<p>On the backend, we protect the CPU from re-computing the same schedule over and over again if a rogue client asks for that.</p>
<p><a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-13-0-may-1-2023" target="_blank" rel="noopener noreferrer">See changelog</a> for a complete list or read on below about the larger new features we added.</p>
<h2>Overlay charts</h2>
<p>With FlexMeasures, you can adapt the dashboard shown on the page for any asset. By default, you see a plot per sensor. With the <code>sensors_to_show</code> attribute, it was already possible to remove and even add plots (e.g. public price data), to create the dashboard with maximum information value.</p>
<p>We wanted to make the dashboards more informative, as often users want to study effects of one sensor's data on others.</p>
<p>Now, sensor numbers in <code>sensors_to_show</code> can be layered, e.g. <code>[1, [3,6]]</code> will lead to two plots, where the second shows two sensors together.</p>
<p>As a bonus, plots are distinguished by source (different trace), sensor (different color) and source type (different stroke dash).</p>
<p>Here is an example (see the overlay of EV charging and PV supply in the lower graph):</p>
<figure class="post__image"><img loading="lazy"  src="https://flexmeasures.io/media/posts/29/layered-chart.png" alt="A layered chart from Seita's V2G living lab" width="800" height="375" sizes="(max-width: 48em) 100vw, 768px" srcset="https://flexmeasures.io/media/posts/29/responsive/layered-chart-xs.png 300w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-sm.png 480w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-md.png 768w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-lg.png 1024w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-xl.png 1360w ,https://flexmeasures.io/media/posts/29/responsive/layered-chart-2xl.png 1600w"><figcaption>A layered chart from Seita's V2G living lab</figcaption></figure>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">This work was done in Pull Request </span><a href="http://www.github.com/flexmeasures/flexmeasures/pull/534" target="_blank" rel="noopener noreferrer">534</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">.</span></p>
<h2>Account page</h2>
<p>FlexMeasures is not just a single-purpose program ― it's a platform which can sit in the cloud and serve multiple sites. To manage these sites when they have different asset owners, the concept of accounts matters a lot. An account might for instance be a SME, with several local energy assets and also several employees (who might or might not have a FlexMeasures user account)</p>
<p>That's why we worked on showing accounts better in the UI and API (in the CLI they are already represented well). The endpoints <code><cite>/accounts</cite></code> (to list accounts) and <code><cite>/accounts/&lt;id&gt;</cite></code> (to show one account) both work in the UI and (via <code>/api/v3_0/</code>) in the API.</p>
<p>We tried to make this useful both for users (looking at their own account) and admins (looking at all accounts). In the future, we hope to work on "consulting accounts", who have the right to administer several other accounts (their clients), making FlexMeasures a potential B2B2B platform! </p>
<p>This work was done in Pull Request <a href="http://www.github.com/flexmeasures/flexmeasures/pull/605">605</a>.</p>
<h2>Avoid re-computing the same schedule</h2>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Computing schedules is where FlexMeasures creates its value, and also where it does the heavier CPU work. The more different sites we serve, the more we learn that it's crucial to protect this CPU work.</span></p>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Triggering schedules is easy, computing them is hard.<br>Here is an example scenario: A rogue client might trigger the same schedule multiple times ― a simple error, but overloading our server with work. In this feature, we enable FlexMeasures to notice that the same computation is already done or currently ongoing. This means not starting the computation again, and also informing the caller with the right status.</span></p>
<p>Technically, we now cache the job, so that before FlexMeasures creates a new one, it can look up if the equivalent already exists somewhere in the queue. Interesting architectural work!</p>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">This work was done in Pull Request </span><a href="http://www.github.com/flexmeasures/flexmeasures/pull/616" target="null">616</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">.</span></p>
<h2>API sunsetting</h2>
<p>Finally, as <a href="https://flexmeasures.readthedocs.io/en/latest/dev/note-on-datamodel-transition.html#note-on-datamodel-transition">our long journey to a more flexible datamodel</a> is coming close to completion, we are sunsetting (as we pre-announced in version 0.12) API versions below 3. Please help your users upgrade to API version 3 before you use FlexMeasures v0.13!</p>
<p>We compiled <a href="https://flexmeasures.readthedocs.io/en/latest/api/introduction.html#deprecation-and-sunset" target="_blank" rel="noopener noreferrer">some helpful information for FlexMeasures hosts </a>to manage this transition well.  </p>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">This work was done in Pull Request <a href="http://www.github.com/flexmeasures/flexmeasures/pull/650">650</a>.</span></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.12: Replay, custom scheduling</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/012-replay-custom-scheduling/"/>
        <id>https://flexmeasures.io/012-replay-custom-scheduling/</id>
        <media:content url="https://flexmeasures.io/media/posts/27/replay-button.png" medium="image" />
            <category term="FlexMeasures Blog"/>

        <updated>2023-01-04T17:17:46+01:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/27/replay-button.png" alt="Playback button" />
                    Version v0.12 of FlexMeasures adds a cool re-play feature and support for adding custom scheduling algorithms! Actually, this release is a big one with many small improvements, e.g. the CLI&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://flexmeasures.io/media/posts/27/replay-button.png" class="type:primaryImage" alt="Playback button" /></p>
                <p>Version v0.12 of FlexMeasures adds a cool re-play feature and support for adding custom scheduling algorithms!</p>
<p>Actually, this release is a big one with many small improvements, e.g. the CLI for data ingestions have taken a big leap.</p>
<p><a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-11-0-august-28-2022" target="_blank" rel="noopener noreferrer">See changelog</a> or read on below to read what we added.</p>
<h2>Replay</h2>
<p>FlexMeasures shines in keeping track <em>what was known at what time</em>. In both simulations and real time operation, we found that our partners want to see how the data situation progressed over time.</p>
<p>That's why we decided to add a replay-button to asset dashboards. It travels through time for you: </p>
<figure class="post__image"><img loading="lazy"  src="https://flexmeasures.io/media/posts/27/ReplayWithRuler.gif" alt="Visualization of FlexMeasures data" width="1257" height="868"><figcaption>Data from Seita's V2G living lab, played back in FlexMeasures</figcaption></figure>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Where is this useful? We've seen this work very well in demos, and to explain why certain schedules were executed half-way, but then the rest got re-written. This happens because when new data arrives (e.g. prices change, an EV re-connects to the charger, etc.), FlexMeasures needs to re-compute the schedule. </span></p>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">This <a href="https://twitter.com/flexmeasures/status/1551841500815695875" target="_blank" rel="noopener noreferrer">has been in the works</a> for a long time, and now finally released. This work was done in Pull Request </span><a href="http://www.github.com/SeitaBV/flexmeasures/pull/463" target="_blank" rel="noopener noreferrer">463</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">.</span></p>
<h2>Custom scheduling</h2>
<p>To schedule flexible assets is the main premise of FlexMeasures. More concretely, the mission of FlexMeasures is to drastically cut down the development time on any flexibility solution, no matter if an in-built scheduler already is applicable.</p>
<p>Together with the plugin support released in <a href="https://flexmeasures.io/070-professional-plugins/">v0.7</a>, this release comes with support for people writing their own schedulers.</p>
<p>This is relevant to researchers and startups who are innovating in the realm of algorithms, but still would like to save development time (and use FlexMeasures as a framework and web application in which to embed their logic).</p>
<p>We will use this internally as well, as it makes any new project easier. Usually, we don't work on new schedulers in the open ― we prefer to iterate in a plugin first. If the result is great, then it'll enter FlexMeasures core.</p>
<p>Up until now, schedulers were an internal feature, accessible by an API, but focused on storage flexibility for the main part (we worked on shiftable flexibility in other projects). Opening a core feature up for other use cases is really helpful to arrive at a better design. We've completely refactored how schedulers are implemented and how to give them the necessary information (the <code>flex-model</code> and the <code>flex-context</code>), and we're very excited how this will empower our own work and that of FlexMeasures users.</p>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">The <a href="https://flexmeasures.readthedocs.io/en/latest/plugin/customisation.html#adding-your-own-scheduling-algorithm" target="_blank" rel="noopener noreferrer">plugin developer tutorial</a> and <a href="https://flexmeasures.readthedocs.io/en/latest/api/notation.html#describing-flexibility" target="_blank" rel="noopener noreferrer">this part of the API notation docs</a> tell you more.</span></p>
<p>This work was done in Pull Requests <a href="http://www.github.com/SeitaBV/flexmeasures/pull/505">505</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/511">511,</a> <a href="http://www.github.com/SeitaBV/flexmeasures/pull/537">537</a>,  <a href="http://www.github.com/SeitaBV/flexmeasures/pull/568">568</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/566">566</a>.</p>
<h2>Ingesting data on the CLI</h2>
<p>Almost every project involves getting some historical data read in (e.g. from CSV or Excel files), be it because one uses FlexMeasures to run simulations, or to have a base data set for machine learning purposes (e.g. a forecasting algorithm). This is tough and iterative engineering work.</p>
<p>FlexMeasures has CLI support for this (<code>flexmeasures add beliefs</code>). We tackled several issues to make this work even more developer-friendly:</p>
<ol>
<li>drop duplicate records with warning</li>
<li>allow configuring which column contains explicit recording times for each data point (use case: import forecasts) </li>
<li>localize timezone naive data</li>
<li>support reading in datetime and timedelta values</li>
<li>remove rows with NaN values</li>
<li>filter by values in specific columns</li>
</ol>
<p>We also improved its counterpart, <code class="docutils literal notranslate"><span class="pre">flexmeasures</span> <span class="pre">show</span> <span class="pre">beliefs</span></code>. We now support:</p>
<ol>
<li>showing beliefs data in a custom resolution and/or timezone</li>
<li>saving the shown beliefs data to a CSV file</li>
<li>handle showing (and saving) instantaneous sensor data and non-instantaneous sensor data together</li>
</ol>
<p>This work was done in Pull Requests <a href="http://www.github.com/SeitaBV/flexmeasures/pull/501">501</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/521" target="_blank" rel="noopener noreferrer">521</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/519" target="_blank" rel="noopener noreferrer">519</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/542" target="null">542</a>.</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>FlexMeasures featured on Python developer podcast</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/flexmeasures-featured-on-python-developer-podcast/"/>
        <id>https://flexmeasures.io/flexmeasures-featured-on-python-developer-podcast/</id>
        <media:content url="https://flexmeasures.io/media/posts/28/podcast-init-logo.png" medium="image" />
            <category term="FlexMeasures Blog"/>

        <updated>2022-12-14T18:24:58+01:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/28/podcast-init-logo.png" alt="Podcast __init__ Logo" />
                    Would an audio-introduction of our work on FlexMeasures help you get started with learning about it? Now there is one ― Listen below or check streaming options on the podcast&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://flexmeasures.io/media/posts/28/podcast-init-logo.png" class="type:primaryImage" alt="Podcast __init__ Logo" /></p>
                <p><span class="break-words"><span dir="ltr">Would an audio-introduction of our work on <a href="https://seita.nl/core-technology/flexmeasures/">FlexMeasures</a> help you get started with learning about it? Now there is one ― Listen below or check streaming options on <a href="https://www.pythonpodcast.com/flexmeasures-energy-management-system-episode-381/">the podcast website!</a></span></span></p>
<div class="vc_row wpb_row vc_row-fluid">
<div class="wpb_column vc_column_container vc_col-sm-12">
<div class="vc_column-inner">
<div class="wpb_wrapper">
<div class="wpb_text_column wpb_content_element ">
<div class="wpb_wrapper">
<p>We’re proud that FlexMeasures has been the featured project on the podcast for Python developers <a href="https://www.pythonpodcast.com/">“Podcast.__init__”</a>.</p>
<div class="post__iframe"><iframe loading="lazy" width="375" height="125" title="Podlove Web Player: The Python Podcast.__init__ - Take Control Of Your Electrical Systems With The Open Source FlexMeasures Energy Management System" src="https://cdn.podlove.org/web-player/share.html?episode=https%3A%2F%2Fwww.pythonpodcast.com%2Fwp%2F%3Fpodlove_player4%3D766" frameborder="0" scrolling="no" tabindex="0"></iframe></div>
<p>During the recording of this episode, we discussed the general need in today’s energy world for such an energy flexibility platform and what we want to achieve.</p>
<p>Then in the second half, we dive into a bit more into how you might start using FlexMeasures from a technical perspective. Pick it up (it’s open source), try it out and don’t forget you can always ask us questions!</p>
</div>
</div>
</div>
</div>
</div>
</div>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.11: Better data views</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/011-better-data-views/"/>
        <id>https://flexmeasures.io/011-better-data-views/</id>
        <media:content url="https://flexmeasures.io/media/posts/26/asset-page-prices-charging.png" medium="image" />
            <category term="FlexMeasures Blog"/>

        <updated>2022-08-28T23:40:13+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/26/asset-page-prices-charging.png" alt="Docker logo" />
                    Version v0.11 of FlexMeasures adds much more useful data views, which are also customisable. In addition, we completed the Docker-compose stack to include background job workers. This is very useful&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://flexmeasures.io/media/posts/26/asset-page-prices-charging.png" class="type:primaryImage" alt="Docker logo" /></p>
                <p>Version v0.11 of FlexMeasures adds much more useful data views, which are also customisable.</p>
<p>In addition, we completed the Docker-compose stack to include background job workers. This is very useful for developers.</p>
<p><a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-11-0-august-28-2022" target="_blank" rel="noopener noreferrer">See changelog</a> or read on below to read what we added.</p>
<h2>Data views</h2>
<p>FlexMeasures is about optimising how your flexible assets are run. It's thus crucial to show the data in context. For instance, the charging schedule of an electric car should be shown together with what it's optimised against. In a project of ours, that is dynamic (hourly) prices. The asset page for the EV should show the prices, as well. The featured image of this blog entry shows this.</p>
<p>Also, we believe users want to concentrate on the data, therefore we moved the controls (date-picker, editing of asset attributes) out of the way.</p>
<figure ><figure class="post__image post__image--center"><img loading="lazy"  src="https://flexmeasures.io/media/posts/26/asset-page-011.gif" alt="A Gif showing the new asset page and the edit controls." width="750" height="359"></figure>
<figcaption >An example of the new asset page and its controls which are only visible if needed.</figcaption>
</figure>
<p>There are numerous other additions for better data viewing, like better axis, tooltip and unit support in plots, remembering the selected date range across pages and  the dashboard being able to group assets by accounts (not just type).</p>
<p>This work was done in Pull Requests  <a href="http://www.github.com/SeitaBV/flexmeasures/pull/449" target="_blank" rel="noopener noreferrer">449</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/467" target="_blank" rel="noopener noreferrer">467</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/423" target="_blank" rel="noopener noreferrer">423</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/446" target="_blank" rel="noopener noreferrer">446</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/447" target="_blank" rel="noopener noreferrer">447</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/474" target="_blank" rel="noopener noreferrer">474</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/475" target="_blank" rel="noopener noreferrer">475</a>.</p>
<h2>Full docker compose stack</h2>
<p>You could tell from the last releases that we want to Dockerize FlexMeasures, so it becomes a first-class cloud citizen, but also that developers can get it to run locally with the least installation hassle.</p>
<p>The missing piece was that the Docker compose stack now also spins up a Redis database and a worker node for doing computations in a queue.</p>
<p>The <a href="https://flexmeasures.readthedocs.io/en/latest/dev/docker-compose.html" target="_blank" rel="noopener noreferrer">docker-compose tutorial</a> reflects this now.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/455" target="_blank" rel="noopener noreferrer">Pull Request 455</a>.</p>
<h2>Serving data in the resolution you need</h2>
<p>When getting data out of FlexMeasures, you also might want a specific resolution. Hourly data is much lighter (if that is all you need) than 5-minute data, for instance. </p>
<p>We added a resolution parameter to <a href="https://flexmeasures.readthedocs.io/en/latest/api/v3_0.html#get--api-v3_0-sensors-data">the <code class="notranslate">/sensors/data</code> (GET) endpoint.</a></p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/458" target="_blank" rel="noopener noreferrer">Pull Request 458</a>.</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Get in touch</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/get-in-touch/"/>
        <id>https://flexmeasures.io/get-in-touch/</id>

        <updated>2022-05-30T17:51:17+02:00</updated>
            <summary>
                <![CDATA[
                    We want you to succeed in using, hosting or extending FlexMeasures. For all your questions and ideas, you can join the FlexMeasures community in the following ways: Join the #flexmeasures&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>We want you to succeed in using, hosting or extending FlexMeasures. For all your questions and ideas, you can join the FlexMeasures community in the following ways:</p>
<ul class="simple">
<li>
<p>Join the <code class="docutils literal notranslate"><span class="pre">#flexmeasures</span></code> channel over at <a class="reference external" href="https://lfenergy.slack.com">https://lfenergy.slack.com</a></p>
</li>
<li>
<p>Write to us at <a class="reference external" href="mailto:flexmeasures%40lists.lfenergy.org">flexmeasures@lists.lfenergy.org</a> (you can join this mailing list <a class="reference external" href="https://lists.lfenergy.org/g/flexmeasures">here</a>).</p>
</li>
<li>
<p>Follow <a class="reference external" href="https://twitter.com/flexmeasures">@flexmeasures</a> on Twitter.</p>
</li>
</ul>
<p>You're also welcome to contribute with issues or pull requests on <a href="https://github.com/FlexMeasures/flexmeasures" target="_blank" rel="noopener noreferrer">Github</a>.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>FAQ</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/faq/"/>
        <id>https://flexmeasures.io/faq/</id>

        <updated>2022-06-01T17:39:20+02:00</updated>
            <summary>
                <![CDATA[
                    What does FlexMeasures do? FlexMeasures is an energy management system (EMS), but a specialized one. You can see it as a data-driven decision-support system for energy flexibility. The question FlexMeasures&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <div class="post__toc">
<h3>Table of Contents</h3>
<ul>
<li><a href="#mcetoc_1g2pacnrh8">What does FlexMeasures do?</a></li>
<li><a href="#mcetoc_1g2pahoqio">Why do you do this?</a></li>
<li><a href="#mcetoc_1g2pagetfj">Why is FlexMeasures open source, and why is it part of the Linux Energy Foundation?</a></li>
<li><a href="#mcetoc_1g2pagetfk">How do I use FlexMeasures / get started?</a></li>
<li><a href="#mcetoc_1g2pagetfl">Can you give some real-world examples where FlexMeasures is used today?</a></li>
<li><a href="#mcetoc_1g2pagetfm">How can FlexMeasures become a puzzle piece in large-scale solutions?</a></li>
</ul>
</div>
<h2 id="mcetoc_1g2pacnrh8">What does FlexMeasures do?</h2>
<div> </div>
<div>FlexMeasures is an energy management system (EMS), but a specialized one. You can see it as a data-driven decision-support system for energy flexibility.</div>
<div>The question FlexMeasures helps to solves is: What are the best times to run my flexible assets? For instance, when to (dis)charge my EV batteries? When should we run our heat pumps to warm up the office?</div>
<div> </div>
<div>Here is the simple version ― sensor data goes in, optimized schedules come out:</div>
<h2><figure class="post__image post__image--center"><img loading="lazy"  src="file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/simple-flexEMS-2.png" alt="" width="750" height="191" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-xs.png 300w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-sm.png 480w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-md.png 768w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-lg.png 1024w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-xl.png 1360w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/3/responsive/simple-flexEMS-2-2xl.png 1600w"></figure>Why do you do this?</h2>
<div> </div>
<div>See <a href="https://www.seita.nl/why" target="_blank" rel="noopener noreferrer">this mission statement</a> (from the original creators): We have to go green. Flexible demand has to be matched with green energy. Open innovation can get us to the speed we need for the global transition.</div>
<h2>How does FlexMeasures add value?</h2>
<div>
<div> </div>
<div>In the end, energy flexibility is about saving energy costs and CO₂. This is why we do this in the first place.</div>
<div> </div>
<div>Taking a more closer look, we believe that lowering the cost of software development can help a big deal. More organisations will be willing to make use of energy flexibility, if the initial costs of such smart systems are low enough. And software development (not even the machine learning parts) makes up a bigger part of the costs than people realize.</div>
<div> </div>
<div>We want developers to love building novel apps and services with FlexMeasures, and for them to focus on the context-specific dimensions: The configuration of how they want FlexMeasures to optimize outcomes, and how this gets presented to users/operators.</div>
<div> </div>
<div><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Let's take a closer look at FlexMeasures' three core value drivers:</span>
<div><br>
<div>1. Real-time data intelligence and integration, with advice for the rest of the day. For example, forecasts and schedules are made available via API.</div>
<div>2. Energy sensor and environment data have multiple sources and their forecasts are uncertain. FlexMeasures uses <a href="https://github.com/SeitaBV/timely-beliefs)" target="_blank" rel="noopener noreferrer">the timely-beliefs library</a> to model this well.</div>
<div>3. Developer support ― building customer-facing apps &amp; services is where energy flexibility hits the road. FlexMeasures reduces developer workload with a well-documented API, data visualization and multi-tenancy, and it supports plugins to customize and extend the platform to your needs.</div>
<div> </div>
<div>Here is a more complete picture of how FlexMeasures fits into an advanced and configurable data-schedules loop:</div>
<div> </div>
<div><figure class="post__image post__image--center"><img loading="lazy"  src="file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/overview-flexEMS.png" alt="" width="800" height="457" sizes="(max-width: 48em) 100vw, 768px" srcset="file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-xs.png 300w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-sm.png 480w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-md.png 768w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-lg.png 1024w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-xl.png 1360w ,file:///home/nicolas/Seitacloud/Internal/FlexMeasures/Website/flexmeasures/flexmeasures/input/media/posts/6/responsive/overview-flexEMS-2xl.png 1600w"></figure></div>
</div>
</div>
<h2 id="mcetoc_1g2pagetfj">Why is FlexMeasures open source, and why is it part of the Linux Energy Foundation?</h2>
<p>We saw two reasons to open source the code of FlexMeasures:</p>
<ol>
<li>Nowadays, open source is a great fit for the speed of innovation which we need, and also the spread of innovation. The energy transition has to go blazingly fast, everywhere. These days, open source projects are often able to innovate faster than closed source counterparts (once they've picked up momentum).</li>
<li>From our many years of experience in designing smart energy solutions, we've come to realize that energy solutions often have multiple stakeholders (e.g. asset owner, user, network operator, energy service company). The transparency offered by open source, and the lack of lock-in, makes collaboration easier and agreements faster.</li>
</ol>
<p>The <a href="https://www.lfenergy.org/" target="_blank" rel="noopener noreferrer">Linux Energy Foundation</a> is a great place for the FlexMeasures project to be part of the growing community of people who understand the above reasoning.open source </p>
<h2 id="mcetoc_1g2pagetfk">How do I use FlexMeasures / get started?</h2>
<p>We make FlexMeasures, so that developers are as productive with energy optimization as possible. As we are developers ourselves, we know that it takes a couple smaller steps to engage with new technology.</p>
<p>Your journey, from dipping your toes in the water towards being a happy FlexMeasures power user, could look like this:</p>
<ol class="arabic simple">
<li>
<p>Quickstart ― Find an optimized schedule for your flexible asset, like a battery, with standard FlexMeasures tooling. This is basically what the from-scratch tutorial above does. All you need are 10 minutes and a CSV file with prices to optimise against.</p>
</li>
<li>
<p>Automate ― get the prices from an open API, for instance <a class="reference external" href="https://transparency.entsoe.eu/">ENTSO-E</a> (using a plugin like <a class="reference external" href="https://github.com/SeitaBV/flexmeasures-entsoe">flexmeasures-entsoe</a>), and run the scheduler regularly in a cron job.</p>
</li>
<li>
<p>Integrate ― Load the schedules via FlexMeasures’ API, so you can directly control your assets and/or show them within your own front-end.</p>
</li>
<li>
<p>Customize ― Load other data (e.g. your solar production or weather forecasts via <a class="reference external" href="https://github.com/SeitaBV/flexmeasures-openweathermap/">flexmeasures-openweathermap</a>. Adapt the algorithms, e.g. do your own forecasting or tweak the standard scheduling algorithm so it optimizes what you care about. Or write a plugin for accessing a new kind of market. The opportunities are endless!</p>
</li>
</ol>
<div> </div>
<div>
<h2 id="mcetoc_1g2pagetfl">Can you give some real-world examples where FlexMeasures is used today?</h2>
<p>FlexMeasures is being used in a few industry projects (water sanitation, sludge burning), where we for instance help to run centrifuges to run during the greenest hours of the day.</p>
<p>It is also used in projects with smaller assets, around the smart home setting (<a href="https://positive-design.nl/" target="_blank" rel="noopener noreferrer">a vehicle-to-grid living lab</a> and battery optimization). Here, FlexMeasures helps to buy cheap, and sell at high prices, for an optimal financial result.</p>
<p>Much work currently goes into the integration of heat pumps.</p>
<p>Of course, we might be missing some use cases. <a href="https://flexmeasures.io/get-in-touch/">We'd love to hear from you</a>.</p>
<h2 id="mcetoc_1g2pagetfm">How can FlexMeasures become a puzzle piece in large-scale solutions?</h2>
<p>The "data-driven" part is where we start! From our experience, data pipelines and dashboarding around energy-consuming assets now often exists.</p>
<p>FlexMeasures works well as the single EMS, but also as an added smart back-end. Integrating the data often means to feed only the relevant parts to FlexMeasures (only relevant sensors, only the resolution needed for decision-making in schedules, e.g. 5 minutes).</p>
<p>Once the right algorithms are connected, FlexMeasures provides optimized schedules via API. Its UI also shows sensor data and schedules and provides the ability for users/operators to annotate them.</p>
<p>The schedules an thus be integrated into larger solutions, into user-facing apps etc. Just as the context requires.</p>
</div>
</div>
            ]]>
        </content>
    </entry>
</feed>
