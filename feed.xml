<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>FlexMeasures</title>
    <link href="https://flexmeasures.io/feed.xml" rel="self" />
    <link href="https://flexmeasures.io" />
    <updated>2022-04-14T17:09:00+02:00</updated>
    <author>
        <name>SeitaBV</name>
    </author>
    <id>https://flexmeasures.io</id>

    <entry>
        <title>v0.9.0: CLI &#x3D;&#x3D; developer power</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/090-cli-developer-power/"/>
        <id>https://flexmeasures.io/090-cli-developer-power/</id>
            <category term="FlexMeasures Blog"/>

        <updated>2022-03-25T17:18:20+01:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/22/florian-krumm-1osIUArK5oA-unsplash-2.jpg" alt="Computer keyboard, by Florian Krumm" />
                    Version v0.9.0 of FlexMeasures (see changelog) adds many CLI commands to control FlexMeasures' data from the terminal. We hope this helps with reducing the onboarding time for new accounts! FlexMeasures&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://flexmeasures.io/media/posts/22/florian-krumm-1osIUArK5oA-unsplash-2.jpg" alt="Computer keyboard, by Florian Krumm" />
                <p>Version v0.9.0 of FlexMeasures (<a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-9-0-march-8-2022" target="_blank" rel="noopener noreferrer">see changelog</a>) adds many CLI commands to control FlexMeasures' data from the terminal. We hope this helps with reducing the onboarding time for new accounts!</p>
<p>FlexMeasures will also now convert incoming data, if it has a different source unit than the required sensor unit.</p>
<p>Finally, we added new tutorial on how to get started using FlexMeasures in just a few minutes and we began a new API version (v3) which is more REST-like than v2 and better supports <a href="https://flexmeasures.readthedocs.io/en/latest/dev/note-on-datamodel-transition.html">the new data model. </a>  Do let us know if these things help you be more productive with FlexMeasures!</p>
<h2>CLI commands</h2>
<p>Developers like to work from the terminal. This lets them interact quicker and more direct with a software platform. With the 0.9.0 release, FlexMeasures adds several commands to work with an instance.</p>
<p>To have them available is especially useful when onboarding a new account or new assets (which is the time when the most developer attention is spent in a FlexMeasures project, or any enterprise software project). These commands are also useful to automate tasks like data ingestion or scheduling.</p>
<p>Here is  a list of new commands:</p>
<ul>
<li>Showing data: <code>flexmeasures show accounts</code>, <code>flexmeasures show account</code>, <code>flexmeasures show roles</code>, <code>flexmeasures show asset-types</code>, <code>flexmeasures show asset</code>, <code>flexmeasures show data-sources</code>, and <code>flexmeasures show beliefs</code></li>
<li>Resample sensor data to a different resolution: <code>flexmeasures db-ops resample-data</code></li>
<li>Create a new schedule for a given power sensor: <code>flexmeasures add schedule</code></li>
<li>Edit/add an attribute on an asset or sensor: <code>flexmeasures edit attribute</code></li>
<li>Add a toy account with a battery and a market for trying FlexMeasures out quickly: <code>flexmeasures add toy-account</code></li>
<li>Deleting data: <code> flexmeasures delete unchanged-beliefs</code>, <code>flexmeasures delete nan-beliefs</code>, <code>flexmeasures delete sensor</code>, <code>flexmeasures delete asset</code></li>
</ul>
<p>You can see all commands in <a href="https://flexmeasures.readthedocs.io/en/latest/cli/commands.html" target="_blank" rel="noopener noreferrer">FlexMeasures' CLI documentation</a>.</p>
<p>This work was done in Pull Requests <a href="http://www.github.com/SeitaBV/flexmeasures/pull/328">328</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/341">341</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/337">337</a> , <a href="http://www.github.com/SeitaBV/flexmeasures/pull/291">339</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/343">343</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/360">360,</a> <a href="http://www.github.com/SeitaBV/flexmeasures/pull/368">368</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/395">395</a>.</p>
<h2>Unit conversion</h2>
<p>Units are a crucial topic in time series data. Only if you get them right, will your data also be correct (and you avoid the risk of incorrect data / lengthy debugging periods). Especially if you have to transform data. One example is of course power to energy, e.g. kW to kWh. There is many more examples.</p>
<figure class="post__image post__image--center" ><img loading="lazy" src="https://imgs.xkcd.com/comics/rounding.png" data-is-external-image="true"  alt="XKCD on unit conversion" width="420" height="489">
<figcaption >The relevant XKCD cartoon</figcaption>
</figure>
<p>We use the excellent <a href="https://pint.readthedocs.io/en/stable/" target="_blank" rel="noopener noreferrer">pint library</a> to help us with that. With version 0.9.0,  FlexMeasures will now convert incoming data, if it has a different source unit than the required sensor unit.</p>
<p>For instance, if the incoming data is kWh, and we know the sensor should store kW, and we also know the sensor's time resolution (e.g. it sends data once per 5 minutes), then we can store kWh data correctly as kW data.</p>
<p>Another great example are percentages. We might receive data in percentages, but it should be permille.</p>
<p>This is now done automatically in both the CLI (<code>flexmeasures add beliefs</code>) and the API (<code>POST /sensorData</code>) when adding data.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/341">Pull Request 341</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/359">Pull Request 359</a>.</p>
<h2>Toy tutorial</h2>
<p>We want many organisations to use FlexMeasures and drastically reduce the development time they need to get an energy flexibility app or service up and running. For this, we were missing a tutorial to show from scratch how FlexMeasures can be useful within minutes.</p>
<p>We now have one where you install FlexMeasures and within a couple minutes you are optimizing the charging schedule of a battery. See it in action here.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/381">Pull Request 381</a>.</p>
<h2> </h2>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Plugins</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/plugins/"/>
        <id>https://flexmeasures.io/plugins/</id>

        <updated>2022-04-13T22:34:30+02:00</updated>
            <summary>
                <![CDATA[
                    You can extend the FlexMeasures EMS with functionality like UI pages, API endpoints, CLI functions and eventually algorithms. This is actually how energy flexibility apps &amp; services are built on&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>You can extend the FlexMeasures EMS with functionality like UI pages, API endpoints,  CLI functions and <a href="https://flexmeasures.io/roadmap/">eventually</a> algorithms. This is actually how energy flexibility apps &amp; services are built on top of FlexMeasures!</p>
<p>Extensibility is key to the open innovation we are going for here.  Read <a href="https://flexmeasures.readthedocs.io/en/latest/dev/plugins.html" target="_blank" rel="noopener noreferrer">here</a> how one builds a plugin. </p>
<p>Solving a use case for a client often involves putting custom code for them in a plugin. So at Seita, we've made quite a few which are private.</p>
<p>Here, let's list crucially useful and also open-source plugins which actually exist already ― this list should grow (<a href="https://www.seita.nl/contact" target="_blank" rel="noopener noreferrer">tell us</a> if there is one you made and want to add here):</p>
<h3>OpenWeatherMap</h3>
<p><a href="https://openweathermap.org/" target="_blank" rel="noopener noreferrer">OpenWeatherMap</a> is one of the best services to get your weather forecasts these days. And these forecasts might be highly useful for deciding what the optimal schedule for the next few hours is. For instance, to maximise self-consumption of your solar panels.</p>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://flexmeasures.io/media/posts/21/OpenWeather-Logo.jpg" sizes="(max-width: 48em) 100vw, 768px" srcset="https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-xs.jpg 300w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-sm.jpg 480w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-md.jpg 768w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-lg.jpg 1024w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-xl.jpg 1360w ,https://flexmeasures.io/media/posts/21/responsive/OpenWeather-Logo-2xl.jpg 1600w"  alt="OpenWeatherMap  Logo" width="432" height="149"></figure>
<p>The source code of the plugin is <a href="https://github.com/SeitaBV/flexmeasures-openweathermap/" target="_blank" rel="noopener noreferrer">here</a>. It adds two CLI commands, one for registering weather sensors on desired locations, one for calling the API and gathering the forecasts for the upcoming hours.</p>
<h3>ENTSO-E</h3>
<p>Market data is crucial for planning ahead. Two examples we use are day-ahead prices (to optimize energy costs) and production forecasts (to estimate the CO2 content on the grid for the upcoming hours).</p>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://flexmeasures.io/media/posts/21/ENTSO-E_logo_sml.jpg" sizes="(max-width: 48em) 100vw, 768px" srcset="https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-xs.jpg 300w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-sm.jpg 480w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-md.jpg 768w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-lg.jpg 1024w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-xl.jpg 1360w ,https://flexmeasures.io/media/posts/21/responsive/ENTSO-E_logo_sml-2xl.jpg 1600w"  alt="ENTSO-E logo" width="443" height="120"></figure>
<p>ENTSO-E is the association of European TSOs. <a href="https://transparency.entsoe.eu/" target="_blank" rel="noopener noreferrer">Their transparency platform</a> publishes different kind of data across European regions. </p>
<p>The source code of the plugin is <a href="https://github.com/SeitaBV/flexmeasures-entsoe" target="_blank" rel="noopener noreferrer">here</a>. It currently supports importing day-ahead prices as well as generation. Based on generation, the CO2 content for the upcoming day can be computed.</p>
<h3>Z-Info</h3>
<p>A plugin for importing data from <a href="https://www.z-info.nl" rel="nofollow">Z-Info</a> into FlexMeasures. Z-Info is a sensor data service for the Dutch water industry. The source code is <a href="https://github.com/SeitaBV/flexmeasures-zinfo" target="_blank" rel="noopener noreferrer">here</a>.</p>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://flexmeasures.io/media/posts/21/Z-info-FC-RGB-188x300.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-xs.png 300w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-sm.png 480w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-md.png 768w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-lg.png 1024w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-xl.png 1360w ,https://flexmeasures.io/media/posts/21/responsive/Z-info-FC-RGB-188x300-2xl.png 1600w"  alt="Z-Info Logo" width="188" height="300"></figure>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.8.0: Better scheduling, safer data</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/080-better-scheduling-safer-data/"/>
        <id>https://flexmeasures.io/080-better-scheduling-safer-data/</id>
            <category term="FlexMeasures Blog"/>

        <updated>2022-01-24T14:02:16+01:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/20/salman-hossain-saif-n6uLxWeCMao-unsplash.jpg" alt="AA batteries on wooden background, by Salman Hossain Saif" />
                    Version v0.8.0 of FlexMeasures (see changelog) improves scheduling &amp; helps to keep data safe. Behind the scenes, a big data model transition is taking form. We work with scheduling of&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://flexmeasures.io/media/posts/20/salman-hossain-saif-n6uLxWeCMao-unsplash.jpg" alt="AA batteries on wooden background, by Salman Hossain Saif" />
                <p>Version v0.8.0 of FlexMeasures (<a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-8-0-january-24-2022" target="_blank" rel="noopener noreferrer">see changelog</a>) improves scheduling &amp; helps to keep data safe. Behind the scenes, a big data model transition is taking form.</p>
<h2>Better scheduling</h2>
<p>We work with scheduling of batteries<a href="https://seita.nl/project/v2ghome-living-lab/" target="_blank" rel="noopener noreferrer"> in practice</a>, which is a great opportunity to find small and crucial improvements.</p>
<p>For instance, we were able to improve the stability in edge cases. FlexMeasures also now can take into account the limited round trip efficiency of batteries, as well as asymmetric buy/sell prices.</p>
<p>This work was done in Pull Requests <a href="http://www.github.com/SeitaBV/flexmeasures/pull/291">291</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/267">267</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/270">270</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/300">300</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/291">291</a>.</p>
<h2>Safer data</h2>
<p>If several accounts (customers) sit in the same FlexMeasures server, it is all the more crucial that only the correctly authorized persons get to see or change data.</p>
<p>v0.8.0 introduces the ability to protect data within users within one account, building on our multi-tenancy model from <a href="https://flexmeasures.io/v060-multi-tenancy-error-monitoring/">version 0.6.0</a>. This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/210">Pull Request 210</a>.</p>
<p>When implementing authorization, it's highly important to do that in a developer-friendly way. What we mean with that is developers need to find it straightforward to make the correct decisions of who has permission to create/read/update/delete which data, and which API endpoints require the user to have which permissions.</p>
<p>In v0.8.0, we implement an authorization model, where the first question is answered in one central place (on the data model) and with high granularity (object-level security). We also offer a new API endpoint decorator (<code class="docutils literal notranslate"><span class="pre">@permission_required_for_context</span></code>), so in-built endpoints, as well as API endpoints in plugins, can be protected easily.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/234">Pull Request 234</a>.</p>
<h2>Data model transition</h2>
<p>Behind the curtains, this version makes a huge step from our deprecated data model to a new, more flexible one. We describe this transition in detail <a href="https://flexmeasures.readthedocs.io/en/latest/dev/note-on-datamodel-transition.html" target="_blank" rel="noopener noreferrer">here</a>, even with before &amp; after pictures.</p>
<p>We are left with a few items on our TODO list, but in this version, we made a big effort. We moved a lot of structure over, as well as actual data and some UI (dashboard, assets). We believe that was the hardest part.</p>
<p>We also took care so existing users feel as little blockage as possible. We wrote extra code so the old data model can still function in the new world, and that data is copied over in the background (don't forget to do the database migration, of course, see changelog).</p>
<h2> </h2>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.7.0: Professional plugins</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/070-professional-plugins/"/>
        <id>https://flexmeasures.io/070-professional-plugins/</id>
            <category term="FlexMeasures Blog"/>

        <updated>2022-01-21T12:55:01+01:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/19/plugin-fender.png" alt="" />
                    Version v0.7.0 of FlexMeasures (see changelog) puts emphasis on plugins that are ready for actual productive use. Professional packaging, testing &amp; style! FlexMeasures plugins are a hugely important concept. Writing&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://flexmeasures.io/media/posts/19/plugin-fender.png" alt="" />
                <p>Version v0.7.0 of FlexMeasures (<a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-7-0-october-26-2021" target="_blank" rel="noopener noreferrer">see changelog</a>) puts emphasis on plugins that are ready for actual productive use. Professional packaging, testing &amp; style! </p>
<p class="msg msg--highlight "><a href="https://flexmeasures.readthedocs.io/en/latest/dev/plugins.html">FlexMeasures plugins</a> are a <span style="text-decoration: underline;">hugely</span> important concept. Writing data integrations for,  and <a href="https://seita.nl/services/" target="_blank" rel="noopener noreferrer">services</a> on top of FlexMeasures ― that's done with plugins.  To support getting started with them in the right way, we now provide <a href="https://github.com/SeitaBV/flexmeasures-plugin-template" target="_blank" rel="noopener noreferrer">a CookieCutter template</a> to get you started in 30 seconds. It also includes a few Blueprint examples and best practices like tests.</p>
<h2>Python packages</h2>
<p>Plugins can be complete Python packages now. Python code which can be installed on your system, e.g. with the pip package manager. You could even upload it to the Pypi index :)</p>
<p>So what is professional about packages? It is more straightforward with a package to add code hygiene, version management and dependencies. You can imagine how much better you'll manage when your plugin can depend on a specific FlexMeasures version and other plugins can depend on yours.</p>
<p>We envision that a top-level service plugin lists FlexMeasures, as well as one or two data integration plugins. You could install that plugin, and immediately run FlexMeasures and your service runs,</p>
<p>If you use the packaging option, FlexMeasures still wants you to define the Blueprints for UI, CLI or API functionality at the top-level of the plugin. (If your plugin is just a folder with files, it still should be in the __init__.py file).</p>
<p>To hit the ground running with the packaging approach,  try the CookieCutter template we mention above, where we give you a full package structure.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/182">Pull Request 182</a>.</p>
<h2>Test automation support</h2>
<p>If the plugin is used for serious stuff, its code also should be tested in automated fashion.</p>
<p>Some tests test an integration of the behavior on top of an actual running app. That's of course a FlexMeasures app. So the plugin tests need to tell FlexMeasures to load the plugin. <a href="https://flexmeasures.readthedocs.io/en/latest/dev/plugins.html#notes-on-writing-tests-for-your-plugin">This is now possible</a> easily.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/220">Pull Request 220</a>.</p>
<h2>Style your plugin</h2>
<p>We believe that FlexMeasures shines as a backend, with a modern one-page JavaScript/HTML frontend for user-facing apps built on top of it.  That's why we provide a full API.</p>
<p>However, a real quick way to provide a UI is to use the Jinja2 templating capabilities of  Flask (which FlexMeasures is built on). We do that in pilots when no frontend dev is available.</p>
<p>Now we made it easier to impose your style on this UI. It's now possible to <a href="https://flexmeasures.readthedocs.io/en/latest/dev/plugins.html#adding-your-own-stylesheets" target="_blank" rel="noopener noreferrer">add your custom CSS spreadsheet</a> and <a href="https://flexmeasures.readthedocs.io/en/latest/dev/plugins.html#using-a-custom-favicon-icon" target="_blank" rel="noopener noreferrer">also show your own logo</a> for the top left corner. It made our ESCo customer happy to see their colors, font and logo in our pilot service's UI when we met their client :)</p>
<p><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">This work was done in </span><a href="http://www.github.com/SeitaBV/flexmeasures/pull/184">Pull Request 184</a> and <span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);"> </span><a href="http://www.github.com/SeitaBV/flexmeasures/pull/185">Pull Request 185</a><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">.</span></p>
<h2> </h2>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Roadmap</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/roadmap/"/>
        <id>https://flexmeasures.io/roadmap/</id>

        <updated>2022-04-14T17:09:00+02:00</updated>
            <summary>
                <![CDATA[
                    The roadmap for further development of the FlexMeasures EMS is the wishlist of its stakeholders. Are you a stakeholder? Then talk to us to influence these plans. [Q2 2022] Allow&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>The roadmap for further development of the FlexMeasures EMS is the wishlist of its stakeholders.</p>
<p>Are you a stakeholder? Then <a href="https://flexmeasures.readthedocs.io/en/latest/get-in-touch.html">talk to us</a> to influence these plans.</p>
<p><strong>[Q2 2022]</strong> Allow for  <a href="https://github.com/FlexMeasures/flexmeasures/projects/15" target="_blank" rel="noopener noreferrer"><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">annotations on time se</span><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">ries</span></a><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">, e.g. to model processes and operator feedback. [work has started in Q1]</span></p>
<p><strong>[Q2 2022]</strong> Better plotting <a href="https://github.com/FlexMeasures/flexmeasures/projects/10" target="_blank" rel="noopener noreferrer">support</a> (via API/vega-lite) for plugins.</p>
<p><strong>[Q2 2022]</strong> <a href="https://github.com/FlexMeasures/flexmeasures/projects/5" target="_blank" rel="noopener noreferrer">Dockerization</a> – allow to start a FlexMeasures node to be deployed quickly.</p>
<p><strong>[Q3 2022]</strong> Actuator &amp; sensor-dependency models for more customizable plugins.  For <a href="https://github.com/FlexMeasures/flexmeasures/projects/8" target="_blank" rel="noopener noreferrer">forecasting</a> and <a href="https://github.com/FlexMeasures/flexmeasures/projects/6" target="_blank" rel="noopener noreferrer">scheduling</a>.</p>
<p><strong>[Q3 2022]</strong> Authorization model for <a href="https://github.com/FlexMeasures/flexmeasures/projects/17" target="_blank" rel="noopener noreferrer">allowing "super-accounts" to manage other accounts</a> (e.g. for ESCos) or add data to them (e.g. meter data companies).</p>
<p><strong>[Q3 2022]</strong> <a href="https://github.com/FlexMeasures/flexmeasures/projects/12" target="_blank" rel="noopener noreferrer">Smarter monitoring</a>.</p>
<p><strong>[Q4 2022]</strong>  Build out the flexibility modelling, by supporting Fraunhofers Energy Flexibility Data Model (<a href="http://publica.fraunhofer.de/starweb/servlet.starweb?path=epub.web&amp;search=N-642370" target="_blank" rel="noopener noreferrer">EDFM</a>)</p>
<p><strong>[Q4 2022]</strong> Scheduler compatible with <a href="https://www.lfenergy.org/projects/shapeshifter/" target="_blank" rel="noopener noreferrer">ShapeShifter</a> (based on USEF flex trading protocol)</p>
<p><strong>[Q1 2023] </strong>Better tooling to work well at scale (e.g. support load balancing, db sharding etc). Also using Docker to scale up more flexibly (e.g. in Kubernetes).</p>
<p> </p>
<h3>Historic achievements</h3>
<p><strong>[Q1 2022]</strong> Improve developer experience (<a href="https://github.com/FlexMeasures/flexmeasures/projects/14" target="_blank" rel="noopener noreferrer">CLI commands</a>, <a href="https://github.com/FlexMeasures/flexmeasures/projects/16" target="_blank" rel="noopener noreferrer">out-of-the-box tutorial</a>) </p>
<p><strong>[Q1 2022]</strong> Data model migration to support all kind of sensors (more than power, weather &amp; prices), as well as units.</p>
<p><strong>[Q3 2021]</strong> Support for <a href="https://github.com/FlexMeasures/flexmeasures/issues/158">multi-tenancy.</a></p>
<p><strong>[Q2 2021]</strong> Allow developers to write custom logic and styles in <a href="https://github.com/FlexMeasures/flexmeasures/projects/2" target="_blank" rel="noopener noreferrer">plugins</a>.</p>
<p><strong>[Q2 2021]</strong> <a href="https://github.com/FlexMeasures/flexmeasures/projects/1" target="_blank" rel="noopener noreferrer">Public release</a>.</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.6.0: Multi-tenancy &amp; error monitoring </title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/v060-multi-tenancy-error-monitoring/"/>
        <id>https://flexmeasures.io/v060-multi-tenancy-error-monitoring/</id>
            <category term="FlexMeasures Blog"/>

        <updated>2021-09-03T19:03:16+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/17/landon-martin-_UQgnpzyVo0-unsplash.jpg" alt="Eggs, by Landon Martin" />
                    Version v0.6.0 of FlexMeasures is out (see changelog). The two most notable new features are that users and assets now belong to accounts (allowing for multi-tenancy setups), and that it's&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://flexmeasures.io/media/posts/17/landon-martin-_UQgnpzyVo0-unsplash.jpg" alt="Eggs, by Landon Martin" />
                <p>Version v0.6.0 of FlexMeasures is out (<a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-6-0-september-3-2021" target="_blank" rel="noopener noreferrer">see changelog</a>). The two most notable new features are that users and assets now belong to accounts (allowing for multi-tenancy setups), and that it's now possible to monitor for things going wrong (and be able to react in time).</p>
<h2>Multi-tenancy</h2>
<p>We envision that there'll be one FlexMeasures server run per ESCO. However, they have multiple customers. Of course, we want to treat them differently in terms of what they see and also silo their data from other customers.</p>
<p>We updated the data model ― we added an account table, to which users and assets are connected. Accounts can also have roles. We made use of these account roles right away in enabling the UI to show different things to users from different (kind of) accounts, e.g. a different landing page or menu links.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/159">Pull Request 159</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/163">Pull Request 163</a>.</p>
<h2>Error monitoring</h2>
<p>When you run a FlexMeasures server, you want to stay on top of things going wrong. We added two ways of doing that:</p>
<ol>
<li>You can connect to Sentry, so that all errors will be sent to your Sentry account. Add the token you got from Sentry in the <em>SENTRY_DNS</em> config setting and you're up and running! See <a href="http://www.github.com/SeitaBV/flexmeasures/pull/143">Pull Request 143</a>.</li>
<li>Another source of crucial errors are things that did not even happen! For instance, a task to import prices from a day-ahead market, which you depend on later for scheduling. We added a new CLI task called <em>flexmeasures monitor tasks, </em>so you can be alerted when tasks have not successfully run at least so-and-so many minutes ago. The alerts will also come in via Sentry, but you can also send them to email addresses with the config setting <em>FLEXMEASURES_MONITORING_MAIL_RECIPIENTS. </em>See <a href="http://www.github.com/SeitaBV/flexmeasures/pull/146">Pull Request 146</a>.</li>
</ol>
<p>For illustration of the latter monitoring, here is one example of how we monitor tasks on a server ― the below is run in a cron script every hour:</p>
<p><code>flexmeasures monitor tasks --task get_weather_forecasts 60 --task get_recent_meter_data 6  --task import_epex_prices 1440</code></p>
<p>The first task (get_weather_forecasts) is actually supported within FlexMeasures, while the other two sit in plugins we wrote. </p>
<h2>Some other notable improvements</h2>
<ul>
<li>Documented how to use a custom favicon in plugins, see <a href="http://www.github.com/SeitaBV/flexmeasures/pull/152">Pull Request 152</a>. </li>
<li>Analytics view offers grouping of all assets by location, see <a href="http://www.github.com/SeitaBV/flexmeasures/pull/148">Pull Request 148</a>.</li>
<li>Allow plugins to register multiple Flask blueprints, see <a href="http://www.github.com/SeitaBV/flexmeasures/pull/171">Pull Request 171</a>.</li>
</ul>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.5.0: OpenWeatherMap and plugin customisation</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/v050-openweathermap-plugin-customisation/"/>
        <id>https://flexmeasures.io/v050-openweathermap-plugin-customisation/</id>
            <category term="FlexMeasures Blog"/>

        <updated>2021-06-07T17:32:50+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/16/OpenWeather-Logo.jpg" alt="OpenWeatherMap Logo" />
                    Version v0.5.0 of FlexMeasures is out (see changelog). Aside from great additions to the documentation (tutorials!) and some smaller things, there's new features for customisation of your project and an&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://flexmeasures.io/media/posts/16/OpenWeather-Logo.jpg" alt="OpenWeatherMap Logo" />
                <p>Version v0.5.0 of FlexMeasures is out (<a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-5-0-june-4-2021" target="_blank" rel="noopener noreferrer">see changelog</a>). Aside from great additions to <a href="https://flexmeasures.readthedocs.io/en/latest">the documentation</a> (tutorials!) and some smaller things, there's new features for customisation of your project and an important switch to how you can retrieve weather forecasts!</p>
<h2>OpenWeatherMap</h2>
<p>FlexMeasures has a CLI command to retrieve weather forecasts from a third party. Very handy. We used DarkSky for this, but they got bought by Apple and <a href="https://www.macrumors.com/2020/07/01/dark-sky-android-app-shutdown-august-1/" target="_blank" rel="noopener noreferrer">will discontinue their open API in August 2021</a>. So we switched to OpenW<a href="https://openweathermap.org/" target="_blank" rel="noopener noreferrer"></a>eatherMap. IIf you were using this feature, there is not much you have to do. Create an account there and set ``OPENWEATHERMAP_API_KEY`` in the FlexMeasures config.</p>
<p style="font-size: 18.4px;">This work was also done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/113">Pull Request 113</a>.</p>
<h2>Plugin customisation</h2>
<p><a href="https://flexmeasures.readthedocs.io/en/latest/dev/plugins.html" target="_blank" rel="noopener noreferrer">Plugins in FlexMeasures</a> are crucial ― they allow a developer to create a customer-centric FlexMeasures solution. We at Seita are using them extensively now.</p>
<p>It's important that the developer can control look&amp;feel. So this version of FlexMeasures allows to the URL routes and many smaller details in the UI.</p>
<p>This work was done in Pull Requests <a href="http://www.github.com/SeitaBV/flexmeasures/pull/106">106</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/123" target="_blank" rel="noopener noreferrer">123</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/139" target="_blank" rel="noopener noreferrer">139</a>.</p>
<h2>Entity addressing</h2>
<p>This one is a deeper technical issue behind the scenes, but crucial for a setting in which FlexMeasures talks to other parties about the same assets, or even multiple FlexMeasures instances do that.</p>
<p style="font-size: 18.4px;">Addressing entities (assets) in non-specific ways can lead to confusion and hard-to-detect data integration errors. We started a new entity addressing schema (`fm1`) which identifies any sensor (from assets, weather sensors, markets all the way to actuators we hope to add soon) with only their ID (<a href="https://flexmeasures.readthedocs.io/en/latest/api/introduction.html#connections-and-entity-addresses" target="_blank" rel="noopener noreferrer">see docs</a>). This prepares for our new data model where this is commonplace (see our log of the previous version 0.4.0).</p>
<p style="font-size: 18.4px;">This work was also done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/81" style="border-bottom: 3px solid rgba(var(--yellow), 1);">Pull Request 81</a>.</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.4.0: Plugin support</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/v040-plugin-support/"/>
        <id>https://flexmeasures.io/v040-plugin-support/</id>
            <category term="FlexMeasures Blog"/>

        <updated>2021-04-29T13:29:01+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/15/plugin-fender.png" alt="" />
                    Version v0.4.0 of FlexMeasures is out (see changelog). Aside from improvements to the documentation and some smaller things, there's new features for customisation of your project! FlexMeasures can now be&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://flexmeasures.io/media/posts/15/plugin-fender.png" alt="" />
                <p>Version v0.4.0 of FlexMeasures is out (<a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-4-0-april-29-2021" target="_blank" rel="noopener noreferrer">see changelog</a>). Aside from improvements to <a href="https://flexmeasures.readthedocs.io/en/latest">the documentation</a> and some smaller things, there's new features for customisation of your project!</p>
<h2>Plugin pages and CLI functions</h2>
<p>FlexMeasures can now be extended with custom UI pages and CLI functions. This is useful for custom dashboards or for custom data integration scripts which can both make use of FlexMeasures internals. For example, the CLI functions can make use of the <code>app.db</code> object,  which has models and a database session ready to use.</p>
<p>We've <a href="https://flexmeasures.readthedocs.io/en/latest/dev/plugins.html">documented</a> plugin writing and will work further on this, with the goal that custom algorithms like forecasting models or scheduling optimisations can be plugged in.</p>
<p>For now, this is already useful for ourselves, as we are able to add custom UI logic and UX to our customer projects, while keeping the FlexMeasures code generic.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/91">Pull Request 91</a>.</p>
<h2>Configure the UI menu</h2>
<p>If you create custom pages, you'd want them to be shown in the menu, as well. Or maybe you want to hide certain pages.</p>
<p>We added the config setting <code>FLEXMEASURES_LISTED_VIEWS</code> to enable that. Its default value is <code>["dashboard", "analytics", "portfolio", "assets", "users"]</code>, but you can set this list to anything.</p>
<p>This work was also done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/91">Pull Request 91</a>.</p>
<h2>Future Features: time series data model refactoring</h2>
<p>We've begun a longer trajectory of making our data model of sensors and measurements more flexible and more tightly integrated with the <a href="http://github.com/seitaBV/timely-beliefs/">timely-beliefs</a> model. We want to make the sensor representation more powerful with respect to aggregation and computation. Also, we believe timely-beliefs is a strong representation of time series data, where statements are made not just after the fact, but before and after, by multiple parties.</p>
<p>For the time being, this new model is living next to the current data model as development features, but we plan to migrate current data over in the coming months. Pull Requests <a href="http://www.github.com/SeitaBV/flexmeasures/pull/79">79</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/85">85</a>, <a href="http://www.github.com/SeitaBV/flexmeasures/pull/99">99</a> and <a href="http://www.github.com/SeitaBV/flexmeasures/pull/103">103</a> are part of this effort. </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>v0.3.0: pip-installable, CLI commands &amp; belief time communication in API</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/v030-pip-install-cli-commands-belief-time-api/"/>
        <id>https://flexmeasures.io/v030-pip-install-cli-commands-belief-time-api/</id>
            <category term="FlexMeasures Blog"/>

        <updated>2021-04-02T23:13:17+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://flexmeasures.io/media/posts/14/Screenshot-from-2021-04-02-12-54-22.png" alt="" />
                    Version v0.3.0 of FlexMeasures is out (see changelog). Aside from improvements to the documentation and some smaller things, there's new features in the API and the dashboard map. FlexMeasures is&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://flexmeasures.io/media/posts/14/Screenshot-from-2021-04-02-12-54-22.png" alt="" />
                <p>Version v0.3.0 of FlexMeasures is out (<a href="https://flexmeasures.readthedocs.io/en/latest/changelog.html#v0-3-0-april-2-2021" target="_blank" rel="noopener noreferrer">see changelog</a>). Aside from improvements to <a href="https://flexmeasures.readthedocs.io/en/latest">the documentation</a> and some smaller things, there's new features in the API and the dashboard map.</p>
<h2>pip install</h2>
<p>FlexMeasures is on the <a href="https://pypi.org/project/flexmeasures/" target="_blank" rel="noopener noreferrer">Pypi index</a>! Installing can now be done with a simple</p>
<p><code>pip install flexmeasures</code></p>
<p>Before, you'd have to clone the code from <a href="https://github.com/SeitaBV/flexmeasures/" target="_blank" rel="noopener noreferrer">Github</a> and run a make command. Just installing via pip should amplify the installation process and also make it easier to use on non-Unix platforms.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/54">Pull Request 54</a>.</p>
<h2>CLI commands to get started</h2>
<p>We are also continually working to make it easier to get started with a new project using FlexMeasures (which we also <a href="https://flexmeasures.readthedocs.io/en/latest/getting-started.html">documented</a> better).</p>
<p>The command-line interface (CLI) is crucial for this. There are  now four  groups of commands:</p>
<pre>$ flexmeasures --help<br>Usage: flexmeasures [OPTIONS] COMMAND [ARGS]...<br><br>  Management scripts for the FlexMeasures platform.<br><br>Commands:<br>  add     FlexMeasures: Add data.<br>  db-ops  FlexMeasures: Reset/Dump/Load/Restore/Save the DB.<br>  delete  FlexMeasures: Delete data.<br>  jobs    FlexMeasures: Job queueing.</pre>
<p>Many of these FlexMeasures commands existed before and now it's easier to find them. There are two new ones:</p>
<ul>
<li><code>flexmeasures add asset</code></li>
<li><code>flexmeasures add weather-sensor</code></li>
</ul>
<p>Now it's possible to add a user, assets and weather sensors right after installing FlexMeasures, so a new project has all necessary data so adding measurements, forecasts and schedules can begin (we also add a dummy market now as part of <code>flexmeasures add structure</code>).</p>
<p>Finally, note that there are more useful commands available, from underlying libraries, for example for inspecting available API routes or to handle database migrations.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/74">Pull Request 74</a><a></a>.</p>
<h2>Set belief time of data in API: "prior"</h2>
<p>We increased clarity for a crucial aspect about time series data (we call them "beliefs"): When was the data recorded / known (the <a href="https://github.com/SeitaBV/timely-beliefs/blob/master/timely_beliefs/docs/timing.md/">"belief time"</a>)?  Next to <code>horizon</code>, the FlexMeasures now understands the new field <code>prior</code>, both for GETting and for POSTing beliefs through the API. I'll cite from the <a href="https://flexmeasures.readthedocs.io/en/latest/api/introduction.html#beliefs">FlexMeasures API documentation</a> about GETting beliefs using the two methods:</p>
<blockquote>
<p>The "prior" field (a timestamp) can be used to select beliefs recorded before some fixed moment in time. It can be used to "time-travel" to see the state of information at some moment in the past.<br>In contrast, the "horizon" field (a duration) can be used to select beliefs recorded before some moment in time, relative to each event.</p>
</blockquote>
<p>Also, we retired the concept of denoting rolling (recurring) horizons, e.g. <code>R/PT6H</code>. We only allow <code>PT6H</code> now to denote a 6 hour horizon and all horizons are interpreted as rolling horizons if the context fits.</p>
<p>This work was done in <a href="http://www.github.com/SeitaBV/flexmeasures/pull/41">Pull Request 41</a>.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Background</title>
        <author>
            <name>SeitaBV</name>
        </author>
        <link href="https://flexmeasures.io/background/"/>
        <id>https://flexmeasures.io/background/</id>

        <updated>2021-03-01T16:56:36+01:00</updated>
            <summary>
                <![CDATA[
                    We are in the middle of a crucial energy transition, from fossil to renewables. Three other large trends in this transition are decentralisation of energy supply, electrification of energy inputs&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>We are in the middle of a crucial energy transition, from fossil to renewables. Three other large trends in this transition are decentralisation of energy supply, electrification of energy inputs (e.g. transportation) and digitisation, i.e. smart metering.</p>
<p>In addition, real-time energy flexibility optimisation is an essential part of our climate mitigation. Our CO<sub>2</sub> reduction targets depend on peak avoidance and optimal usage of renewable energy. While data is made available at high speed, the controllability of flexible devices is only now picking up.</p>
<p>Interest in optimisation services within the energy community is increasing constantly, as demonstrated by the EU pushing regulation for dynamic pricing, smart grids and energy communities. Also, interoperability standards are maturing. As these regulations and standards land, and more assets are connected and made controllable, profitability will shortly follow suit.</p>
<p>Meanwhile, non-Western parts of the world are not waiting for our results any more. Every continent is turning towards renewables, storage and digitisation, as purchasing costs plummet, whether they have strong grids, or favourable regulation, or none of the above.</p>
            ]]>
        </content>
    </entry>
</feed>
